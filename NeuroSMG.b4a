Build1=Default,NeuroSMG.app
File1=16pf.csv
File10=FOT.bal
File11=GNG.bal
File12=hamburger.png
File13=IAT.bal
File14=Left.bal
File15=leongard.csv
File16=login.bal
File17=main.bal
File18=mini.mult.csv
File19=questionrequester.bal
File2=anamnesis.csv
File20=RAT.bal
File21=schubert.csv
File22=SCT.bal
File23=smil.f.csv
File24=smil.m.csv
File25=stai.csv
File26=test.bal
File27=tests.bal
File28=TMT.bal
File3=archive.bal
File4=audit.csv
File5=buss.durkey.csv
File6=cage.csv
File7=CBT.bal
File8=coping.csv
File9=eysenck.csv
FileGroup1=Default Group
FileGroup10=Default Group
FileGroup11=Default Group
FileGroup12=Default Group
FileGroup13=Default Group
FileGroup14=Default Group
FileGroup15=Default Group
FileGroup16=Default Group
FileGroup17=Default Group
FileGroup18=Default Group
FileGroup19=Default Group
FileGroup2=Default Group
FileGroup20=Default Group
FileGroup21=Default Group
FileGroup22=Default Group
FileGroup23=Default Group
FileGroup24=Default Group
FileGroup25=Default Group
FileGroup26=Default Group
FileGroup27=Default Group
FileGroup28=Default Group
FileGroup3=Default Group
FileGroup4=Default Group
FileGroup5=Default Group
FileGroup6=Default Group
FileGroup7=Default Group
FileGroup8=Default Group
FileGroup9=Default Group
Group=Default Group
IconFile=
Library1=core
Library10=randomaccessfile
Library11=dialogs
Library12=id
Library2=appcompat
Library3=xui
Library4=viewsex
Library5=phone
Library6=runtimepermissions
Library7=javaobject
Library8=archiver
Library9=stringutils
ManifestCode='This code will be applied to the manifest file during compilation.~\n~'You do not need to modify it in most cases.~\n~'See this link for for more information: http://www.basic4ppc.com/forum/showthread.php?p=78136~\n~SetActivityAttribute(Main,  android:windowSoftInputMode, "stateHidden|adjustPan")~\n~~\n~AddManifestText(~\n~<uses-sdk android:minSdkVersion="7" android:targetSdkVersion="26"/>~\n~<supports-screens android:largeScreens="true" ~\n~    android:normalScreens="true" ~\n~    android:smallScreens="true" ~\n~    android:anyDensity="true"/>)~\n~AddManifestText(<uses-permission~\n~   android:name="android.permission.WRITE_EXTERNAL_STORAGE"~\n~   android:maxSdkVersion="18" />~\n~)~\n~~\n~AddApplicationText(~\n~  <provider~\n~  android:name="android.support.v4.content.FileProvider"~\n~  android:authorities="$PACKAGE$.provider"~\n~  android:exported="false"~\n~  android:grantUriPermissions="true">~\n~  <meta-data~\n~  android:name="android.support.FILE_PROVIDER_PATHS"~\n~  android:resource="@xml/provider_paths"/>~\n~  </provider>~\n~)~\n~CreateResource(xml, provider_paths,~\n~   <files-path name="name" path="shared" />~\n~)~\n~SetApplicationAttribute(android:icon, "@drawable/icon")~\n~SetApplicationAttribute(android:label, "$LABEL$")~\n~'End of default text.~\n~~\n~SetApplicationAttribute(android:theme, "@style/MyAppTheme")~\n~~\n~CreateResource(values, theme.xml,~\n~<resources>~\n~    <style name="MyAppTheme" parent="Theme.AppCompat.Light.NoActionBar">~\n~        <item name="colorPrimary">#0098FF</item>~\n~        <item name="colorPrimaryDark">#007CF5</item>~\n~        <item name="colorAccent">#AAAA00</item>~\n~        <item name="windowNoTitle">true</item>~\n~        <item name="windowActionBar">false</item>~\n~		<item name="android:windowTranslucentNavigation">false</item>~\n~     	<item name="android:windowTranslucentStatus">true</item>~\n~    </style>~\n~</resources>~\n~)
Module1=Starter
Module2=B4XDrawer
Module3=FileProvider
Module4=CustomListView
Module5=StateManager
Module6=test
NumberOfFiles=28
NumberOfLibraries=12
NumberOfModules=6
Version=9.01
@EndOfDesignText@
#Region  Project Attributes 
	#ApplicationLabel: NeuroSMG
	#VersionCode: 1
	#VersionName: AttractiveAbsolute
	'SupportedOrientations possible values: unspecified, landscape or portrait.
	#SupportedOrientations: unspecified
	#CanInstallToExternalStorage: False
#End Region

#Region  Activity Attributes 
	#FullScreen: False
	#IncludeTitle: True
#End Region
	#Extends: android.support.v7.app.AppCompatActivity

#If Java

public boolean _onCreateOptionsMenu(android.view.Menu menu) {
    if (processBA.subExists("activity_createmenu")) {
        processBA.raiseEvent2(null, true, "activity_createmenu", false, new de.amberhome.objects.appcompat.ACMenuWrapper(menu));
        return true;
    }
    else
        return false;
}
#End If	

#IgnoreWarnings: 11

'Sub Activity_WindowFocusChanged(HasFocus As Boolean)
'	If HasFocus Then
'		Dim jo As JavaObject = Activity
'		jo.RunMethod("setSystemUiVisibility", Array As Object(5894)) '3846 - non-sticky
'	End If
'End Sub

Sub Activity_CreateMenu(Menu As ACMenu)
	Dim item As ACMenuItem
	Dim ph As Phone
	Dim bd As BitmapDrawable

'	bd = ph.GetResourceDrawable(17301555)
'	Menu.Add2(10, 1, "Add", bd).ShowAsAction = item.SHOW_AS_ACTION_IF_ROOM
'	
'	bd = ph.GetResourceDrawable(17301564)
'	Menu.Add2(10, 2, "Delete Round", bd).ShowAsAction = item.SHOW_AS_ACTION_IF_ROOM

'	bd = ph.GetResourceDrawable(17301566)
'	Menu.Add2(10, 3, "Edit Round", bd).ShowAsAction = item.SHOW_AS_ACTION_IF_ROOM

'	bd = ph.GetResourceDrawable(17301577)
'	Menu.Add2(10, 4, "Pref", bd).ShowAsAction = item.SHOW_AS_ACTION_IF_ROOM

'	bd = ph.GetResourceDrawable(17301568)
'	Menu.Add2(10, 5, "Help", bd).ShowAsAction = item.SHOW_AS_ACTION_ALWAYS
	
	Menu.Add(1, 1, "Контрольная группа", Null) : ACToolBarLight1.Menu.FindItem(1).Checkable = True
	Menu.Add(2, 2, "Опытная группа", Null)     : ACToolBarLight1.Menu.FindItem(2).Checkable = True
	
	If StateManager.getSetting2("group", "Контрольная группа") = "Контрольная группа" Then
		ACToolBarLight1.Menu.FindItem(1).Checked = True
		group = "Контрольная группа"
	Else If StateManager.getSetting("group") = "Опытная группа" Then
		ACToolBarLight1.Menu.FindItem(2).Checked = True
		group = "Опытная группа"
	End If
End Sub

Sub Process_Globals
	Dim ActiveView As String
	Dim FOTtestTimer As Timer
	Dim GNGtestTimer As Timer
	Dim GNGsubtestTimer As Timer
	Dim GNGcleanTimer As Timer
	Dim SCTTimer As Timer
	Dim CBTtimer As Timer
	Dim CBTtimerContinue As Timer
	
	Dim name As String
	Dim age As String
	Dim sex As String
	Dim dhand As String
	Dim session As Long
	Dim comment As String
	Dim group As String
	
	Type coordinates(x As Int, y As Int)
End Sub

Sub Globals
	Private ACToolBarLight1 As ACToolBarLight
	Private ToolbarHelper As ACActionBar
	Private Drawer As B4XDrawer
	Dim cs As CSBuilder
	Private ListViewLeft As ListView
	Private MainPanel As Panel
	Dim p As Phone
	Dim RESWriter As TextWriter
	
	'''''''''''''''''''''' Login
	Private LoginEditTextName As EditText
	Private LoginEditTextAge As EditText
	Private LoginEditTextComment As EditText
	Private LoginToggleButtonSex As ToggleButton
	Private LoginToggleButtonHand As ToggleButton
	Private LoginCheckBox As CheckBox
	
	'''''''''''''''''''''' FOT
	Dim FOTCanvasRes As Canvas
	Dim FOTBitmapRes As Bitmap
	Dim FOTButtonHand As Button
	Dim FOTLabelTicks As Label
	Dim FOTLabelName As Label
	Dim FOTTimerLabel As Label
	Dim FOTButtonReset As Button
	
	Dim FOTtestDuration As Int
	Dim FOTcurrentTime As Int
	Dim FOTcoords As String
	Dim FOTtickduration As String
	Dim FOTTimeLeft As Int
	Dim FOTTimerStarted As Boolean
	Dim FOThand As String
	Dim FOTWriter As TextWriter
	Dim FOTnow As Long
	Dim FOTresult As List
	Dim FOTticks As List
	Dim FOTx As Float
	Dim FOTy As Float
	Dim FOTt1, FOTt2, FOTduration As Long
	
	Dim Vibrate As PhoneVibrate
	
	'''''''''''''''''''''' RAT
	Dim RATLabelN, RATLabelInfo, RATLabelBank, RATLabelLastBallon As Label
	Dim RATLabelName As Label
	Dim RATButtonSave As Button
	Dim RATx0, RATy0 As Int
	Dim RATstart, RATlogged As Boolean
	Dim RATr As Float
	Dim RATCanvasRes As Canvas
	Dim RATbColor As Int
	Dim RATE, RATm, RATn, RATln As Int
	Dim RATl As String
	Dim RATmark As String
	Dim RATbank As Double
	Dim RATiter As Int
	Dim RATciter As Int
	Dim RATlastBallonCost As Double
	Dim RATsaved As Boolean
	Dim RATduration, t As Long
	Dim RATlastBallon As Int
	Dim RATNEnd As Int
	Dim RATtime As Long
	Dim RATWriter As TextWriter
	Dim RATresult As List
	Private RATButtonLStart As Button
	Private RATToggleButtonLSex As ToggleButton
	Private RATEditTextLAge As EditText
	Private RATButtonLShare As Button
	Private RATButtonLClear As Button
	
	'''''''''''''''''''''' IAT
	Dim IATcGood As List
	Dim IATcAlco As List
	Dim IATresult As List
	
	Dim IATerror As Boolean
	Dim IATCanvasRes As Canvas
		
	Dim IATside, IATmark, IATtmp As String
	Dim IATduration, IATtime As Long
	Dim IATx0 As Int
	Dim IATblock, IATn, IATi, IATi0 As Int
	Dim IATWriter As TextWriter
	
	Private IATLabelInfoLeft, IATLabelInfoRight, IATLabelInfoBottom, IATLabelInfo, IATLabelLeft, IATLabelRight, IATLabelInfoBottom, IATLabelName As Label
	
	'''''''''''''''''''''' GNG
	Dim GNGLabel1, GNGLabel2, GNGLabel3, GNGLabel4, GNGLabel5 As Label
	Private GNGButtonStart As Button
	Private GNGLabelName As Label
	
	Dim GNGi0, GNGi, GNGn As Int
	Dim GNGtime, GNGt0 As Long
	Dim GNGWriter As TextWriter
	Dim GNGmark As String
	Dim GNGresult As List
	
	'''''''''''''''''''''' SCT
	Dim SCTLabelName, SCTLabelInfo, SCTLabelPanel, SCTLabelLeft, SCTLabelRight As Label
	Dim SCTx0 As Int
	Dim SCTstarted As Boolean
	Dim SCTside, SCTtColor, SCTtText, SCTtmp As String
	Dim SCTt0, SCTt, SCTduration As Long
	Dim SCTn As Int
	Dim SCTWriter As TextWriter
	Dim SCTresult As List
	
	'''''''''''''''''''''' TMT
	Dim MAZE_DISPLAY As Canvas
	Dim MAZE_INVIS As Canvas
	Dim mc As Int
	Dim MAZE_SIZE_H, MAZE_SIZE_V As Int
	Dim MAZE(1, 1) As Int
	
	Dim TMTn = 1 As Int
	Dim TMTstart As String
	
	Dim TMTLabelName As Label
	Dim TMTLabelN As Label
	Dim TMTpanel As Panel
	Dim TMTpanelInv As Panel
	
	Dim TMTWriter As TextWriter
	Dim TMTresult As List
	
	'''''''''''''''''''''' CBT
	Dim CBTn As Int
	Dim CBTi = 0 As Int
	Dim CBTmax As Int
	Dim CBTcurrent = 1 As Int
	Dim CBTstarted As Boolean
	Dim CBTstart As Long
	Dim CBTblocksize As Int
	
	Dim CBTCanvas As Canvas
	Dim CBTCanvasInvis As Canvas
	Dim CBTLabelName As Label
	Dim CBTLabelN As Label
	Dim CBTpanel As Panel
	Dim CBTpanelInv As Panel
		
	Dim CBTrnd As Map
	Dim CBTWriter As TextWriter
	Dim CBTresult As List
	Dim coords As List
	
	'''''''''''''''''''''' tests
	Dim testi As Int
	Dim testtime As Long
	Dim testCurrent As String
	Dim questions As List
	Dim testWriter As TextWriter
	Dim testresult As List
	Dim testsCustomListView As CustomListView
	Private testsLabelQuestion As Label
	Private testLabel As Label
	Private testLabelname As Label
	Private testButton1 As Button
	Private testButton2 As Button
	Private testButton3 As Button
	Private testButton4 As Button
	Private testButton5 As Button
	
	Dim questionPicker As CustomLayoutDialog
	Private questionrequesterLabel As Label
	Private questionrequesterEditText As EditText
	
	'''''''''''''''''''''' archive
	Dim FileToSend As String
	Dim ArchiveCustomListView As CustomListView
	Private ArchiveButtonClearResults As Button
End Sub

Sub Activity_Create(FirstTime As Boolean)
	Drawer.Initialize(Me, "Drawer", Activity, 300dip)
	Drawer.CenterPanel.LoadLayout("main")
	ToolbarHelper.Initialize
	ToolbarHelper.ShowUpIndicator = True 'set to true to show the up arrow
	Dim bd As BitmapDrawable
	bd.Initialize(LoadBitmap(File.DirAssets, "hamburger.png"))
	ToolbarHelper.UpIndicatorDrawable = bd
	ACToolBarLight1.InitMenuListener
	Drawer.LeftPanel.LoadLayout("Left")
	
	ListViewLeft.AddSingleLine("Профиль")
	ListViewLeft.AddSingleLine("FOT")
	ListViewLeft.AddSingleLine("RAT")
	ListViewLeft.AddSingleLine("IAT")
	ListViewLeft.AddSingleLine("GNG")
	ListViewLeft.AddSingleLine("SCT")
	ListViewLeft.AddSingleLine("TMT")
	ListViewLeft.AddSingleLine("CBT")
	ListViewLeft.AddSingleLine("Опросники")
	ListViewLeft.AddSingleLine("Архив")
	ListViewLeft.AddSingleLine("О программе")
	
	If FirstTime Then
		If File.Exists(File.DirInternal & "out", "") = False Then
			File.MakeDir(File.DirInternal, "out")
		End If
		If File.Exists(File.DirInternal & "data", "") = False Then
			File.MakeDir(File.DirInternal, "data")
		End If

		ActiveView = "login"
		LoginInit
		
		'''''''''''''''''''''''' test only
		'name = "test" : age = 999 : sex = "aeldari" : dhand = "both" : comment = "no comments"
	End If
End Sub

Sub ACToolBarLight1_NavigationItemClick
	Drawer.LeftOpen = Not(Drawer.LeftOpen)
End Sub

Sub ACToolBarLight1_MenuItemClick (Item As ACMenuItem)
	If Item.Id = 1 Then
		ACToolBarLight1.Menu.FindItem(2).Checked = False
		group = "Контрольная группа"
	Else If Item.Id = 2 Then
		ACToolBarLight1.Menu.FindItem(1).Checked = False
		group = "Опытная группа"
	End If

	If Item.Checkable = True Then
		Item.Checked = Not(Item.Checked)
	End If
'	If Item.Title = "Add" Then
'		cs.Initialize.Append("FontAwesome: ").Typeface(Typeface.FONTAWESOME).Append(Chr(0xF209)).PopAll
'		ToastMessageShow(cs, True)
'		Dim btntext As CSBuilder
'		Button.Text = btntext.initialize.Append("Click me!").Typeface(Typeface.FONTAWESOME).Append(Chr(0xF062)).PopAll
'	End If
'	If Item.Title = "Pref" Then
'		cs.Initialize.Append("MaterialIcons: ").Typeface(Typeface.MATERIALICONS).VerticalAlign(5dip).Append(Chr(0xE531)).PopAll
'		ToastMessageShow(cs, True)
'		Dim btntext As CSBuilder
'		Button.Text = btntext.initialize.Append("Click me!").Typeface(Typeface.FONTAWESOME).Append(Chr(0xF063)).PopAll
'	End If
End Sub

Sub Activity_KeyPress (KeyCode As Int) As Boolean 
	If KeyCode = KeyCodes.KEYCODE_BACK And Drawer.LeftOpen Then
		Drawer.LeftOpen = False
		Return True
	End If
	Return False
End Sub


Sub Activity_Resume
	MainPanel.RemoveAllViews
	Drawer.LeftOpen = False
	
	If ActiveView = "login" Then
		LoginInit
	Else If ActiveView = "FOT" Then
		FOTInit
	Else If ActiveView = "RAT" Then
		RATInit
	Else If ActiveView = "IAT" Then
		IATinit
	Else If ActiveView = "GNG" Then
		GNGInit
	Else If ActiveView = "SCT" Then
		SCTInit
	Else If ActiveView = "TMT" Then
		TMTInit
	Else If ActiveView = "CBT" Then
		CBTInit
	Else If ActiveView = "tests" Then
		testsInit
	Else If ActiveView = "archive" Then
		archiveInit
	End If
End Sub

Sub Activity_Pause (UserClosed As Boolean)

End Sub

''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
Sub ListViewLeft_ItemClick (Position As Int, Value As Object)
	MainPanel.RemoveAllViews
	Drawer.LeftOpen = False
	
	If ActiveView = "FOT" Then
		FOTClearResults
	End If
		
	If Value = "Профиль" Then
		ActiveView = "login"
		p.SetScreenOrientation(1)
		LoginInit
	Else If Value = "FOT" Then
		ActiveView = "FOT"
		p.SetScreenOrientation(1)
		FOTInit
	Else If Value = "RAT" Then
		ActiveView = "RAT"
		p.SetScreenOrientation(1)
		RATInit
	Else If Value = "IAT" Then
		ActiveView = "IAT"
		p.SetScreenOrientation(0)
		IATinit
	Else If Value = "GNG" Then
		ActiveView = "GNG"
		p.SetScreenOrientation(1)
		GNGInit
	Else If Value = "SCT" Then
		ActiveView = "SCT"
		p.SetScreenOrientation(1)
		SCTInit
	Else If Value = "TMT" Then
		ActiveView = "TMT"
		p.SetScreenOrientation(0)
		TMTInit
	Else If Value = "CBT" Then
		ActiveView = "CBT"
		p.SetScreenOrientation(1)
		CBTInit
	Else If Value = "Опросники" Then
		ActiveView = "tests"
		p.SetScreenOrientation(1)
		testsInit
	Else If Value = "Архив" Then
		ActiveView = "archive"
		p.SetScreenOrientation(1)
		archiveInit
	End If
End Sub

Sub MainPanel_Touch(Action As Int, tx As Float, ty As Float)
	If ActiveView = "FOT" Then
Select Action
			Case MainPanel.ACTION_DOWN
				FOTt1 = DateTime.Now
			Case MainPanel.ACTION_UP
				FOTt2 = DateTime.Now
				FOTduration = FOTt2-FOTt1
		End Select
		If Action = MainPanel.ACTION_UP And FOTButtonReset.Text = "Готов" Then
			Log(FOTduration)
			'remove previous results
			If FOTTimerStarted = False Then
				FOTClearResults
				FOTButtonReset.Text = "Готов"
				FOTTimerStarted = True
				FOTButtonHand.Enabled  = False
				FOTButtonReset.Enabled  = False
			End If
		
			FOTCanvasRes.DrawCircle(tx, ty, 7dip, Colors.Red, True, 3dip)
			MainPanel.Invalidate3(tx - 7dip, ty - 7dip, tx + 7dip, ty + 7dip)
			FOTnow = DateTime.Now
			FOTcurrentTime = FOTtestDuration - FOTTimeLeft + 1
			FOTx = tx / MainPanel.Width
			FOTy = ty / MainPanel.Height
		
			'FOTcoords = session & ";" & name & "," & age & "," & sex & "," & dhand & ";" & FOTnow & ";" & FOTcurrentTime & ";" & FOTduration & ";" & FOTx & ";" & FOTy & ";" & FOThand
			FOTcoords = FOTnow & ";" & FOTcurrentTime & ";" & FOTduration & ";" & FOTx & ";" & FOTy & ";" & FOThand
			Log(FOTcoords)
			FOTresult.Add(FOTcoords)
		
			FOTticks.Add(FOTnow)
			If FOTticks.Size > 1 Then
				FOTtickduration = FOTticks.Get(FOTticks.Size-1)-FOTticks.Get(FOTticks.Size-2)
				FOTLabelTicks.Text = FOTtickduration
			End If
		Else If Action = 0 And FOTButtonReset.Text = "Начать" Then
			Msgbox("", "Нажмите кнопку Начать")
		Else If Action = 0 And FOTButtonReset.Text = "Сохранить" Then
			Msgbox("", "Сохраните результаты перед продолжением!")
		End If
	else if ActiveView = "RAT" Then
		If RATiter = 0 Then
			RATButtonSave.Enabled = True
		End If
		Select Action
			Case Activity.ACTION_DOWN
				t = DateTime.Now
			Case Activity.ACTION_UP
				If RATLabelName.Text = "Введите имя:" Or RATLabelName.Text = "" Then
					ToastMessageShow ("Введите имя!", False)
				Else
					RATtime = DateTime.Now
					RATduration = RATtime-t
					RATmark = "pump"
					RATPump
				End If
		End Select
	else if ActiveView = "IAT" Then
		Select Action
			Case Activity.ACTION_DOWN
				If IATLabelInfoBottom.Text <> "" Then
					IATLabelInfoBottom.Text = ""
					IATerror = False
				End If
				t = DateTime.Now
			Case Activity.ACTION_UP
				IATtime = DateTime.Now
				IATduration = IATtime-t
				
				IATLabelInfoBottom.Text = "Блок: "&IATblock&", n: "&(IATn+1)
				
				If tx < IATx0 Then
					IATside = "left"
				Else
					IATside = "right"
				End If
				
				If IATblock = 1 Then
					If (IATmark = "soft" And IATside = "left") Or (IATmark = "alco" And IATside = "right") Then
						'IATtmp = session&";"&name&";"&IATtime&";"&IATblock&";"&IATn&";"&IATduration&";"&IATside&";"&IATi&";"&IATmark&";"&IATerror&";"&IATLabelInfo.Text
						IATtmp = IATtime&";"&IATblock&";"&IATn&";"&IATduration&";"&IATside&";"&IATi&";"&IATmark&";"&IATerror&";"&IATLabelInfo.Text
						IATresult.Add(IATtmp)
						Log(IATtmp)
						IATdoTest
						IATn = IATn + 1
					Else
						IATLabelInfoBottom.Text = "НЕВЕРНО!"&CRLF&"Сделайте правильный выбор"
						IATerror = True
						'IATtmp = session&";"&name&";"&IATtime&";"&IATblock&";"&IATn&";"&IATduration&";"&IATside&";"&IATi&";"&IATmark&";"&IATerror&";"&IATLabelInfo.Text
						IATtmp = IATtime&";"&IATblock&";"&IATn&";"&IATduration&";"&IATside&";"&IATi&";"&IATmark&";"&IATerror&";"&IATLabelInfo.Text
						IATresult.Add(IATtmp)
						Log(IATtmp)
					End If
				Else If IATblock = 2 Then
					If (IATmark = "good" And IATside = "left") Or (IATmark = "bad" And IATside = "right") Then
						'IATtmp = session&";"&name&";"&IATtime&";"&IATblock&";"&IATn&";"&IATduration&";"&IATside&";"&IATi&";"&IATmark&";"&IATerror&";"&IATLabelInfo.Text
						IATtmp = IATtime&";"&IATblock&";"&IATn&";"&IATduration&";"&IATside&";"&IATi&";"&IATmark&";"&IATerror&";"&IATLabelInfo.Text
						IATresult.Add(IATtmp)
						Log(IATtmp)
						IATdoTest
						IATn = IATn + 1
					Else
						IATLabelInfoBottom.Text = "НЕВЕРНО!"&CRLF&"Сделайте правильный выбор"
						IATerror = True
						'IATtmp = session&";"&name&";"&IATtime&";"&IATblock&";"&IATn&";"&IATduration&";"&IATside&";"&IATi&";"&IATmark&";"&IATerror&";"&IATLabelInfo.Text
						IATtmp = IATtime&";"&IATblock&";"&IATn&";"&IATduration&";"&IATside&";"&IATi&";"&IATmark&";"&IATerror&";"&IATLabelInfo.Text
						IATresult.Add(IATtmp)
						Log(IATtmp)
					End If
				Else If IATblock = 3 Or IATblock = 4 Then
					If (IATmark = "goodsoft" And IATside = "left") Or (IATmark = "badalco" And IATside = "right") Then
						'IATtmp = session&";"&name&";"&IATtime&";"&IATblock&";"&IATn&";"&IATduration&";"&IATside&";"&IATi&";"&IATmark&";"&IATerror&";"&IATLabelInfo.Text
						IATtmp = IATtime&";"&IATblock&";"&IATn&";"&IATduration&";"&IATside&";"&IATi&";"&IATmark&";"&IATerror&";"&IATLabelInfo.Text
						IATresult.Add(IATtmp)
						Log(IATtmp)
						IATdoTest
						IATn = IATn + 1
					Else
						IATLabelInfoBottom.Text = "НЕВЕРНО!"&CRLF&"Сделайте правильный выбор"
						IATerror = True
						'IATtmp = session&";"&name&";"&IATtime&";"&IATblock&";"&IATn&";"&IATduration&";"&IATside&";"&IATi&";"&IATmark&";"&IATerror&";"&IATLabelInfo.Text
						IATtmp = IATtime&";"&IATblock&";"&IATn&";"&IATduration&";"&IATside&";"&IATi&";"&IATmark&";"&IATerror&";"&IATLabelInfo.Text
						IATresult.Add(IATtmp)
						Log(IATtmp)
					End If
				Else If IATblock = 5 Then
					If (IATmark = "bad" And IATside = "left") Or (IATmark = "good" And IATside = "right") Then
						'IATtmp = session&";"&name&";"&IATtime&";"&IATblock&";"&IATn&";"&IATduration&";"&IATside&";"&IATi&";"&IATmark&";"&IATerror&";"&IATLabelInfo.Text
						IATtmp = IATtime&";"&IATblock&";"&IATn&";"&IATduration&";"&IATside&";"&IATi&";"&IATmark&";"&IATerror&";"&IATLabelInfo.Text
						IATresult.Add(IATtmp)
						Log(IATtmp)
						IATdoTest
						IATn = IATn + 1
					Else
						IATLabelInfoBottom.Text = "НЕВЕРНО!"&CRLF&"Сделайте правильный выбор"
						IATerror = True
						'IATtmp = session&";"&name&";"&IATtime&";"&IATblock&";"&IATn&";"&IATduration&";"&IATside&";"&IATi&";"&IATmark&";"&IATerror&";"&IATLabelInfo.Text
						IATtmp = IATtime&";"&IATblock&";"&IATn&";"&IATduration&";"&IATside&";"&IATi&";"&IATmark&";"&IATerror&";"&IATLabelInfo.Text
						IATresult.Add(IATtmp)
						Log(IATtmp)
					End If
				Else If IATblock = 6 Or IATblock = 7 Then
					If (IATmark = "badsoft" And IATside = "left") Or (IATmark = "goodalco" And IATside = "right") Then
						'IATtmp = session&";"&name&";"&IATtime&";"&IATblock&";"&IATn&";"&IATduration&";"&IATside&";"&IATi&";"&IATmark&";"&IATerror&";"&IATLabelInfo.Text
						IATtmp = IATtime&";"&IATblock&";"&IATn&";"&IATduration&";"&IATside&";"&IATi&";"&IATmark&";"&IATerror&";"&IATLabelInfo.Text
						IATresult.Add(IATtmp)
						Log(IATtmp)
						IATdoTest
						IATn = IATn + 1
					Else
						IATLabelInfoBottom.Text = "НЕВЕРНО!"&CRLF&"Сделайте правильный выбор"
						IATerror = True
						'IATtmp = session&";"&name&";"&IATtime&";"&IATblock&";"&IATn&";"&IATduration&";"&IATside&";"&IATi&";"&IATmark&";"&IATerror&";"&IATLabelInfo.Text
						IATtmp = IATtime&";"&IATblock&";"&IATn&";"&IATduration&";"&IATside&";"&IATi&";"&IATmark&";"&IATerror&";"&IATLabelInfo.Text
						IATresult.Add(IATtmp)
						Log(IATtmp)
					End If
				Else If IATblock = 8 Then
					IATLabelInfoLeft.Text = ""
					IATLabelInfoRight.Text = ""
					IATLabelInfo.Text = ""

					IATblock = 1
					IATn = 1
					
					Msgbox("Исследование окончено, спасибо!","")
					IATWriter.Initialize(File.OpenOutput(File.DirInternal,"/data/IAT."& session & ".csv",True))
					IATWriter.WriteList(IATresult)
					IATWriter.Close
					IATresult.Clear
					
					RESWriter.Initialize(File.OpenOutput(File.DirInternal,"/data/private.csv",True))
					RESWriter.WriteLine(session & ";" & group & ";" & "IAT" & ";" & name & ";" & sex & ";" & age & ";" & dhand & ";" & comment)
					RESWriter.Close
					ToastMessageShow ("Данные были успешно сохранены в файл " & File.DirInternal& "/data/IAT."& session & ".csv", True)
				End If
				
				If IATerror = False Then
					If IATn = 1 Then
						IATblock = 1
						IATLabelInfoLeft.Text = "Напитки"
						IATLabelInfoRight.Text = "Алкоголь"
					else if IATn = 21 Then '11
						IATblock = 2
						IATLabelInfoLeft.Text = "Хорошо"
						IATLabelInfoRight.Text = "Плохо"
						IATdoTest
						Msgbox("Сделайте выбор между Хорошим и Плохим","Этап "&IATblock)
					else if IATn = 41 Then '21
						IATblock = 3
						IATLabelInfoLeft.Text = "Хорошо"&CRLF&"или"&CRLF&"Напитки"
						IATLabelInfoRight.Text = "Плохо"&CRLF&"или"&CRLF&"Алкоголь"
						IATdoTest
						Msgbox("Сделайте выбор между Хорошим + Напитки и Плохим + Алкоголь","Этап "&IATblock)
					else if IATn = 61 Then '31
						IATblock = 4
						IATLabelInfoLeft.Text = "Хорошо"&CRLF&"или"&CRLF&"Напитки"
						IATLabelInfoRight.Text = "Плохо"&CRLF&"или"&CRLF&"Алкоголь"
						IATdoTest
						Msgbox("Сделайте выбор между Хорошим + Напитки и Плохим + Алкоголь","Этап "&IATblock)
					else if IATn = 101 Then '41
						IATblock = 5
						IATLabelInfoLeft.Text = "Плохо"
						IATLabelInfoRight.Text = "Хорошо"
						IATdoTest
						Msgbox("Сделайте выбор между Плохим и Хорошим","Этап "&IATblock)
					else if IATn = 121 Then '51
						IATblock = 6
						IATLabelInfoLeft.Text = "Плохо"&CRLF&"или"&CRLF&"Напитки"
						IATLabelInfoRight.Text = "Хорошо"&CRLF&"или"&CRLF&"Алкоголь"
						IATdoTest
						Msgbox("Сделайте выбор между Плохим + Напитки и Хорошим + Алкоголь","Этап "&IATblock)
					else if IATn = 141 Then '61
						IATblock = 7
						IATLabelInfoLeft.Text = "Плохо"&CRLF&"или"&CRLF&"Напитки"
						IATLabelInfoRight.Text = "Хорошо"&CRLF&"или"&CRLF&"Алкоголь"
						IATdoTest
						Msgbox("Сделайте выбор между Плохим + Напитки и Хорошим + Алкоголь","Этап "&IATblock)
					else if IATn = 181 Then '71
						IATblock = 8
					End If
				End If
		End Select
	else if ActiveView = "SCT" Then
		Select Action
			Case Activity.ACTION_DOWN
				SCTt0 = DateTime.Now
			Case Activity.ACTION_UP
				If tx < SCTx0 Then
					SCTside = "left"
				Else
					SCTside = "right"
				End If

				If SCTstarted Then
					SCTt = DateTime.Now
					SCTduration = SCTt-SCTt0
					'SCTtmp = session&";"&name&";"&SCTt&";"&SCTduration&";"&SCTside&";"&SCTtText&";"&SCTtColor&";"&SCTn
					SCTtmp = SCTt&";"&SCTduration&";"&SCTside&";"&SCTtText&";"&SCTtColor&";"&SCTn
					Log(SCTtmp)
					SCTresult.Add(SCTtmp)
					
					SCTLabelPanel.Text = "" : SCTLabelPanel.TextColor = Colors.white
					SCTtText = "" : SCTtColor = ""
					SCTTimer.Enabled = True
					
					SCTn = SCTn + 1
					SCTdoTest
				Else
					ToastMessageShow("Коснитесь центра экрана для начала", False)					
				End If
		End Select
	End If
End Sub


'''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
'''''''''''''''''''''''''''''''''''                     Login                     '''''''''''''''''''''''''''''''''''''''''''''''''''
'''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
Sub LoginInit
	ACToolBarLight1.Title = "Профиль"
	ACToolBarLight1.SubTitle = "Основные данные"
	MainPanel.LoadLayout("login")
	
	If(StateManager.GetSetting("name")) <> "" Then
		LoginCheckBox.Checked = True
		name  = StateManager.GetSetting("name")
		age   = StateManager.GetSetting("age")
		sex   = StateManager.GetSetting("sex")
		dhand = StateManager.GetSetting("dhand")
	End If
	LoginEditTextName.Text = StateManager.GetSetting("name")
	LoginEditTextAge.Text = StateManager.GetSetting("age")
	If StateManager.getSetting("sex") = "жен" Then
		LoginToggleButtonSex.Checked = True
	Else
		LoginToggleButtonSex.Checked = False
	End If
	If StateManager.getSetting("dhand") = "левая" Then
		LoginToggleButtonHand.Checked = True
	Else
		LoginToggleButtonHand.Checked = False
	End If
End Sub

Sub LoginButtonStart_Click
	If LoginEditTextName.Text = "" Or LoginEditTextAge.Text = "" Then
		ToastMessageShow("Заполните все поля!", True)
	Else
		name = LoginEditTextName.Text
		age = LoginEditTextAge.Text
		
		If LoginToggleButtonHand.Checked = False Then
			dhand = "правая"
		Else
			dhand = "левая"
		End If
		If LoginToggleButtonSex.Checked = False Then
			sex = "муж"
		Else
			sex = "жен"
		End If
				
		If LoginCheckBox.Checked = True Then
			StateManager.SetSetting("name", LoginEditTextName.Text)
			StateManager.SetSetting("age", LoginEditTextAge.Text)
			StateManager.SetSetting("sex", LoginEditTextAge.Text)
			If LoginToggleButtonSex.Checked = False Then
				StateManager.SetSetting("sex", "муж")
			Else
				StateManager.SetSetting("sex", "жен")
			End If
			If LoginToggleButtonHand.Checked = False Then
				StateManager.SetSetting("dhand", "правая")
			Else
				StateManager.SetSetting("dhand", "левая")
			End If
			StateManager.SetSetting("group", group)
			StateManager.SaveSettings
		End If
		
		comment = LoginEditTextComment.Text
	End If
End Sub

Sub LoginButtonDelete_Click
	name = ""  : LoginEditTextName.Text = ""
	age = ""   : LoginEditTextAge.Text = ""
	sex = ""   : LoginToggleButtonSex.Checked = False
	dhand = "" : LoginToggleButtonHand.Checked = False
	comment = "" : LoginEditTextComment.Text = ""
	LoginCheckBox.Checked = False
	StateManager.SetSetting("name", "")
	StateManager.SetSetting("age", "")
	StateManager.SetSetting("sex", "муж")
	StateManager.SetSetting("dhand", "правая")
	StateManager.SetSetting("group", "Контрольная группа")
	StateManager.SaveSettings
End Sub


'''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
'''''''''''''''''''''''''''''''''''                      FOT                      '''''''''''''''''''''''''''''''''''''''''''''''''''
'''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
Sub FOTInit
	ACToolBarLight1.Title = "FOT"
	ACToolBarLight1.SubTitle = "Finger oscillation test"
	MainPanel.LoadLayout("FOT")
	session = DateTime.Now
	
	FOTLabelName.Text = name
		
	FOTCanvasRes.Initialize(MainPanel)
	FOTBitmapRes.Initialize3(FOTCanvasRes.Bitmap)
	
	FOTtestTimer.Initialize("FOTtestTimer", 1000)
	FOTtestTimer.Enabled = True
	
	FOTButtonHand.Text = "Правая рука"
	
	FOTTimerStarted = False
	FOTtestDuration = 30
	FOTTimeLeft = FOTtestDuration
	FOThand = "right"
	FOTButtonReset.Text = "Начать"
	FOTTimerLabel.Text = FOTTimeLeft
	
	FOTresult.Initialize
	FOTticks.Initialize
End Sub

Sub FOTButtonReset_Click
	If FOTButtonReset.Text = "Начать" Then
		FOTButtonReset.Text = "Готов"
		Msgbox("", "Коснитесь экрана для начала")
	Else If FOTButtonReset.Text = "Готов" Then
		Msgbox("", "Коснитесь экрана для начала")
	Else If FOTButtonReset.Text = "Сохранить" Then
		FOTWriter.Initialize(File.OpenOutput(File.DirInternal,"/data/FOT."& session & ".csv",True))
		FOTWriter.WriteList(FOTresult)
		FOTWriter.Close
		FOTresult.Clear
		If FOThand = "left" Then
			RESWriter.Initialize(File.OpenOutput(File.DirInternal,"/data/private.csv",True))
			RESWriter.WriteLine(session & ";" & group & ";" & "FOT" & ";" & name & ";" & sex & ";" & age & ";" & dhand & ";" & comment)
			RESWriter.Close
		End If
		
		ToastMessageShow ("Данные были успешно сохранены в файл " & File.DirInternal & "/data/FOT."& session & ".csv", True)
		
		FOTClearResults
	End If
End Sub

Sub FOTtestTimer_Tick
	If FOTTimeLeft = 1 Then
		FOTTimeLeft = FOTtestDuration
		Vibrate.Vibrate (100)
		FOTTimerLabel.Text = FOTTimeLeft
		FOTLabelTicks.Text = ""
		FOTButtonReset.Text = "Сохранить"
		FOTTimerStarted = False
		ToastMessageShow ("Время вышло!", False)
		FOTButtonHand.Enabled  = True
		FOTButtonReset.Enabled  = True

		If FOTButtonHand.Text = "Правая рука" Then
			FOThand = "left"
			FOTButtonHand.Text = "Левая рука"
		Else If FOTButtonHand.Text = "Левая рука" Then
			FOThand = "right"
			FOTButtonHand.Text = "Правая рука"
		End If
	End If
	If FOTTimerStarted = True Then
		FOTTimeLeft = FOTTimerLabel.Text - 1
		FOTTimerLabel.Text = FOTTimeLeft
	End If
End Sub

Sub FOTClearResults
	FOTTimerStarted = False
	FOTTimeLeft = FOTtestDuration
	FOTTimerLabel.Text = FOTTimeLeft
	FOTLabelTicks.Text = ""
	If FOTticks.Size > 0 Then
		FOTticks.Clear()
	End If
	FOTCanvasRes.DrawColor(Colors.White)
	MainPanel.Invalidate()
	FOTButtonReset.Text = "Начать"
End Sub

'''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
'''''''''''''''''''''''''''''''''''                      RAT                      '''''''''''''''''''''''''''''''''''''''''''''''''''
'''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
Sub RATInit
	ACToolBarLight1.Title = "RAT"
	ACToolBarLight1.SubTitle = "Risk appetite test"
	MainPanel.LoadLayout("RAT")
	session = DateTime.Now
	
	RATCanvasRes.Initialize(MainPanel)
	RATCanvasRes.DrawColor(Colors.White)
	RATx0 = MainPanel.Width/2
	RATy0 = MainPanel.Height/2
	RATstart = True
	RATbColor = Colors.Red
	RATr = 10
	RATE = 0
	RATm = 8
	RATn = Rnd(1, RATm-1)
	RATln = 1
	RATbank = 0
	RATiter = 0
	RATlastBallon = 0
	RATsaved = False
	RATNEnd = 30
	RATLabelN.Text = "Шар: " & RATln
	RATLabelBank.Text = "Банк: $" & RATbank
	RATLabelLastBallon.Text = "Последний шар: $" & RATlastBallon
	RATresult.Initialize
	RATButtonSave.Enabled = False
	
	RATCanvasRes.DrawColor(Colors.White)
	RATCanvasRes.DrawCircle(RATx0, RATy0, RATr, RATbColor, True, 3dip)
	
	RATLabelName.Text = name
	RATCanvasRes.DrawCircle(RATx0, RATy0, RATr, RATbColor, True, 3dip)
	RATE = 1
	RATLabelN.Text = "Шар: " & RATln
	RATLabelBank.Text = "Банк: $" & RATbank
	RATLabelLastBallon.Text = "Последний шар: $" & RATlastBallon
	MsgboxAsync("Попытка №" & RATE,"")
End Sub


Sub RATPump
	If RATLabelName.Text <> "Введите имя:" And RATLabelName.Text <> "" And RATLabelName.Text <> " " Then
		RATiter = RATiter + 1
		If RATstart = True Then
			RATr = 10
			RATciter = 0
			RATCanvasRes.DrawColor(Colors.White)
			RATCanvasRes.DrawCircle(RATx0, RATy0, RATr, RATbColor, True, 3dip)
			RATstart = False
		End If

		If RATstart = False Then
			RATButtonSave.Enabled = True
			RATr = RATr + 2
			RATn = RATn + 1
			RATciter = RATciter + 1
		End If
		
		If RATn = RATm + 1 Or RATsaved = True Then
			RATButtonSave.Enabled = False
			RATstart = True
			RATr = 10
			RATbColor = Rnd(0,3)
			If  RATbColor = 0 Then
				RATbColor = Colors.Red
			Else if RATbColor = 1 Then
				RATbColor = Colors.Yellow
			Else if RATbColor = 2 Then
				RATbColor = Colors.Green
			End If
		
			If RATbColor = Colors.Red Then
				RATm = 8
				RATn = Rnd(1, RATm-1)
			End If
			If RATbColor = Colors.Yellow Then
				RATm = 32
				RATn = Rnd(1, RATm-1)
			End If
			If RATbColor = Colors.Green Then
				RATm = 128
				RATn = Rnd(1, RATm-1)
			End If
			
			If RATsaved = True Then
				RATlastBallonCost = Round2((RATciter-1)*0.05, 2)
				RATLabelLastBallon.Text = "Последний шар: $" & RATlastBallonCost
				RATbank = Round2(RATbank + RATlastBallonCost, 2)
				RATLabelBank.Text = "Банк: $" & RATbank
				RATmark = "save"
			Else
				ToastMessageShow ("Ой, шарик лопнул...", False)
				Vibrate.Vibrate (100)
				RATLabelLastBallon.Text =  "Последний шар: $0"
				RATmark = "exploded"
			End If

			RATciter = 0
			
			RATCanvasRes.DrawColor(Colors.White)
			RATCanvasRes.DrawCircle(RATx0, RATy0, RATr, RATbColor, True, 3dip)
			
			RATln = RATln + 1
			RATLabelN.Text = "Шар: " & RATln
			RATsaved = False
		End If
		
		If RATln = RATNEnd+1 Then
			If RATE < 3 Then
				RATE = RATE + 1
				MsgboxAsync("Попытка №" & RATE,"")
			Else if RATE = 3 Then
				Msgbox("Исследование окончено, спасибо!","")
				'RATresult.Add(session & ";" & RATtime & ";" & name & ";" & RATE & ";" & RATm & ";" & RATn & ";" & RATr & ";" & RATln & ";" & RATiter & ";" & RATciter & ";" & RATduration & ";" & RATmark & ";" & RATbank)
				RATresult.Add(RATtime & ";" & RATE & ";" & RATm & ";" & RATn & ";" & RATr & ";" & RATln & ";" & RATiter & ";" & RATciter & ";" & RATduration & ";" & RATmark & ";" & RATbank)
				RATWriter.Initialize(File.OpenOutput(File.DirInternal, "/data/RAT."& session & ".csv",True))
				RATWriter.WriteList(RATresult)
				RATWriter.Close
				RATresult.Clear
				
				RESWriter.Initialize(File.OpenOutput(File.DirInternal,"/data/private.csv",True))
				RESWriter.WriteLine(session & ";" & group & ";" & "RAT" & ";" & name & ";" & sex & ";" & age & ";" & dhand & ";" & comment)
				RESWriter.Close
				
				RATE = 0
				ToastMessageShow ("Данные были успешно сохранены в файл " & File.DirInternal & "/data/RAT."& session & ".csv", True)
			End If
			RATButtonSave.Enabled = False
			RATLabelN.Text = "Шар: 1"
			RATln = 1
			RATLabelBank.Text = "Банк: $0"
			RATLabelLastBallon.Text = "Последний шар: $0"
			RATiter = 0
			RATciter = 0
		End If
						
		RATl = "name: "&name&"m: "&RATm&", n: "&RATn&", r: "&RATr&", Шар: "&RATln&", Iter: "&RATiter&", Citer: "&RATciter&", bank: "&RATbank&", mark: "&RATmark&", E: "&RATE
		Log(RATl)
		'RATresult.Add(session&";"&RATtime&";"&name&";"&RATE&";"&RATm&";"&RATn&";"&RATr&";"&RATln&";"&RATiter&";"&RATciter&";"&RATduration&";"&RATmark&";"&RATbank)
		RATresult.Add(RATtime & ";" & RATE & ";" & RATm & ";" & RATn & ";" & RATr & ";" & RATln & ";" & RATiter & ";" & RATciter & ";" & RATduration & ";" & RATmark & ";" & RATbank)
		'RATLabelInfo.Text = RATl
		RATCanvasRes.DrawCircle(RATx0, RATy0, RATr, RATbColor, True, 3dip)
		MainPanel.Invalidate3(RATx0 - 7dip, RATy0 - 7dip, RATx0 + 7dip, RATy0 + 7dip)
			
		' если счетчик обнулялся во 2 или 3 попытке, обнуляем принудительно
		If RATln = 1 And RATE <> 1 Then
			RATbank = 0
			RATlastBallon = 0
		End If
	End If
End Sub

Sub RATButtonSave_click
	RATsaved = True
	RATmark = "save"
	RATduration = 0
	RATPump
End Sub


'''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
'''''''''''''''''''''''''''''''''''                      IAT                      '''''''''''''''''''''''''''''''''''''''''''''''''''
'''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
Sub IATinit
	ACToolBarLight1.Title = "IAT"
	ACToolBarLight1.SubTitle = "Implicit association test"
	MainPanel.LoadLayout("IAT")
	session = DateTime.Now
	
	IATLabelName.Text = name
	IATblock = 1
	IATn = 1
	IATi0 = Rnd(0,10)
	IATi = IATi0
	IATerror = False
	
	IATresult.Initialize
	IATcGood.Initialize
	IATcGood.AddAll(Array As String("мерзко", "ужасно", "отвратительно", "гадко", "отрицательно", "вкусно", "приятно", "положительно", "полезно", "мило"))
	IATcAlco.Initialize
	IATcAlco.AddAll(Array As String("водка", "пиво", "вино", "коньяк", "виски","вода", "сок", "чай", "морс", "лимонад"))

	IATCanvasRes.Initialize(MainPanel)
	IATCanvasRes.DrawColor(Colors.Black)
	IATx0 = MainPanel.Width/2
	
	IATLabelInfoLeft.Text = "Напитки"
	IATLabelInfoRight.Text = "Алкоголь"
	'block = 7 :	n = 178
		
	IATLabelInfo.Color = Colors.RGB(255,255,120)
	IATLabelInfo.TextColor = Colors.Black

	IATLabelInfoRight.Color  = Colors.DarkGray
	IATLabelInfoLeft.Color   = Colors.DarkGray
	IATLabelInfoBottom.Color = Colors.DarkGray
		
	IATi0 = Rnd(0,10)
	IATi = IATi0
	IATdoTest
	Msgbox("Сделайте выбор между Напитками и Алкоголем","Этап 1")
	IATLabelInfoBottom.Text = "Блок: "&IATblock&", n: 1"
End Sub

Sub IATdoTest
	If IATblock = 1 Then
		Do While IATi0 = IATi
			IATi = Rnd(0,10)
		Loop
		IATi0 = IATi
		If IATi < 5 Then
			IATmark = "alco"
		Else
			IATmark = "soft"
		End If
		IATLabelInfo.Text = IATcAlco.Get(IATi)
	else if IATblock = 2 Then
		Do While IATi0 = IATi
			IATi = Rnd(0,10)
		Loop
		IATi0 = IATi
		If IATi < 5 Then
			IATmark = "bad"
		Else
			IATmark = "good"
		End If
		IATLabelInfo.Text = IATcGood.Get(IATi)
	else if IATblock = 3 Or IATblock = 4 Then
		' определяем индекс элемента
		Do While IATi0 = IATi
			IATi = Rnd(0,10)
		Loop
		IATi0 = IATi
		' определяем алкоголь или эмоции
		If Rnd(0,2) = 0 Then
			IATLabelInfo.Text = IATcAlco.Get(IATi)
			IATmark = "alco"
		Else
			IATLabelInfo.Text = IATcGood.Get(IATi)
			IATmark = "good"
		End If
		
		If IATmark = "alco" And IATi < 5 Then
			IATmark = "badalco"
		else if IATmark = "alco" And IATi > 4 Then
			IATmark = "goodsoft"
		else if IATmark = "good" And IATi < 5 Then
			IATmark = "badalco"
		else if IATmark = "good" And IATi > 4 Then
			IATmark = "goodsoft"
		End If
	else if IATblock = 5 Then
		Do While IATi0 = IATi
			IATi = Rnd(0,10)
		Loop
		IATi0 = IATi
		If IATi < 5 Then
			IATmark = "bad"
		Else
			IATmark = "good"
		End If
		IATLabelInfo.Text = IATcGood.Get(IATi)
	else if IATblock = 6 Or IATblock = 7 Then
		' определяем индекс элемента
		Do While IATi0 = IATi
			IATi = Rnd(0,10)
		Loop
		IATi0 = IATi
		' определяем алкоголь или эмоции
		If Rnd(0,2) = 0 Then
			IATLabelInfo.Text = IATcAlco.Get(IATi)
			IATmark = "alco"
		Else
			IATLabelInfo.Text = IATcGood.Get(IATi)
			IATmark = "good"
		End If
		
		If IATmark = "alco" And IATi < 5 Then
			IATmark = "goodalco"
		else if IATmark = "alco" And IATi > 4 Then
			IATmark = "badsoft"
		else if IATmark = "good" And IATi < 5 Then
			IATmark = "badsoft"
		else if IATmark = "good" And IATi > 4 Then
			IATmark = "goodalco"
		End If
	End If
End Sub

'''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
'''''''''''''''''''''''''''''''''''                      GNG                      '''''''''''''''''''''''''''''''''''''''''''''''''''
'''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''

Sub GNGInit
	ACToolBarLight1.Title = "GNG"
	ACToolBarLight1.SubTitle = "Go/No go test"
	MainPanel.LoadLayout("GNG")
	session = DateTime.Now
	
	GNGLabelName.Text = name
	GNGButtonStart.Text = "Начать" : GNGButtonStart.TextSize = 14
	
	GNGtestTimer.Initialize("GNGtestTimer", 1000)
	GNGsubtestTimer.Initialize("GNGsubtestTimer", 50)
	GNGcleanTimer.Initialize("GNGcleanTimer", 500)
	
	If GNGtestTimer.Enabled Then
		GNGtestTimer.Enabled = False
	End If
	
	GNGi0 = 1
	GNGn = 0
	GNGresult.Initialize
	GNGresult.Clear
	
	GNGLabel1.Left = MainPanel.Width/2 - GNGLabel1.Width/2
	GNGLabel2.Left = GNGLabel1.Left + 30
	GNGLabel3.Left = GNGLabel1.Left + 30
	GNGLabel4.Left = GNGLabel1.Left + 30 + GNGLabel2.Width + 30
	GNGLabel5.Left = GNGLabel1.Left + 30 + GNGLabel2.Width + 30
	
	GNGLabel2.Text = Chr(0xE89F) : GNGLabel2.TextColor = Colors.Gray
	GNGLabel3.Text = Chr(0xE89F) : GNGLabel3.TextColor = Colors.Gray
	GNGLabel4.Text = Chr(0xE89F) : GNGLabel4.TextColor = Colors.Gray
	GNGLabel5.Text = Chr(0xE89F) : GNGLabel5.TextColor = Colors.Gray
End Sub


Sub GNGtestTimer_Tick
	If GNGn <= 50 Then
		If GNGn <> 0 Then
			'Log("n = "&GNGn&", mark = "&GNGmark&", time = "&GNGtime&"/"&GNGtestTimer.Interval)
			Log(session&";"&(GNGtime+GNGt0)&";"&name&";"&GNGn&";"&GNGmark&";"&GNGtime&";"&GNGtestTimer.Interval)
			'GNGresult.Add(session&";"&(GNGtime+GNGt0)&";"&name&";"&GNGn&";"&GNGmark&";"&GNGtime&";"&GNGtestTimer.Interval)
			GNGresult.Add((GNGtime+GNGt0) & ";" & GNGn & ";" & GNGmark & ";" & GNGtime &";" & GNGtestTimer.Interval)
		End If
				
		Do While GNGi0 = GNGi
			GNGi = Rnd(2,6)
		Loop
	
		GNGi0 = GNGi
				
		If GNGi = 2 Then
			GNGLabel2.Text = Chr(0xE5CD) : GNGLabel2.TextColor = Colors.Gray
		else if GNGi = 3 Then
			GNGLabel3.Text = Chr(0xE5CD) : GNGLabel3.TextColor = Colors.Gray
		else if GNGi = 4 Then
			GNGLabel4.Text = Chr(0xE5CD) : GNGLabel4.TextColor = Colors.Gray
		else if GNGi = 5 Then
			GNGLabel5.Text = Chr(0xE5CD) : GNGLabel5.TextColor = Colors.Gray
		End If
		
		GNGsubtestTimer.Enabled = True
		GNGcleanTimer.Enabled = True
		GNGtestTimer.Interval = Rnd(1000,2001)
		
		GNGt0 = DateTime.Now : GNGtime = 0
		GNGn = GNGn + 1
	Else 
		Msgbox("Исследование окончено, спасибо!","")
		
		GNGWriter.Initialize(File.OpenOutput(File.DirInternal, "/data/GNG."& session & ".csv",True))
		GNGWriter.WriteList(GNGresult)
		GNGWriter.Close
		
		RESWriter.Initialize(File.OpenOutput(File.DirInternal,"/data/private.csv",True))
		RESWriter.WriteLine(session & ";" & group & ";" & "GNG" & ";" & name & ";" & sex & ";" & age & ";" & dhand & ";" & comment)
		RESWriter.Close
		
		ToastMessageShow ("Данные были успешно сохранены в файл " & File.DirInternal & "/data/GNG."& session & ".csv", True)
		
		GNGInit
	End If
End Sub

Sub GNGsubtestTimer_Tick
	If Rnd(1,4) = 1 Then
		GNGmark = "nogo"
		If GNGi = 2 Then
			GNGLabel2.Text = Chr(0xE145) : GNGLabel2.TextColor = Colors.Gray
		else if GNGi = 3 Then
			GNGLabel3.Text = Chr(0xE145) : GNGLabel3.TextColor = Colors.Gray
		else if GNGi = 4 Then
			GNGLabel4.Text = Chr(0xE145) : GNGLabel4.TextColor = Colors.Gray
		else if GNGi = 5 Then
			GNGLabel5.Text = Chr(0xE145) : GNGLabel5.TextColor = Colors.Gray
		End If
	Else
		GNGmark = "go"
	End If
	
	GNGsubtestTimer.Enabled = False
End Sub

Sub gngcleantimer_tick
	GNGLabel2.Text = Chr(0xE89F) : GNGLabel2.TextColor = Colors.Gray
	GNGLabel3.Text = Chr(0xE89F) : GNGLabel3.TextColor = Colors.Gray
	GNGLabel4.Text = Chr(0xE89F) : GNGLabel4.TextColor = Colors.Gray
	GNGLabel5.Text = Chr(0xE89F) : GNGLabel5.TextColor = Colors.Gray
	GNGcleanTimer.Enabled = False
End Sub

Sub GNGButtonStart_click
	If GNGButtonStart.Text = "Начать" Then
		GNGtestTimer.Enabled = True
		GNGButtonStart.TextSize = 48 : GNGButtonStart.Text = Chr(0xE5CD)
	Else
		GNGtime = DateTime.Now - GNGt0
	End If
End Sub


'''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
'''''''''''''''''''''''''''''''''''                      SCT                      '''''''''''''''''''''''''''''''''''''''''''''''''''
'''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
Sub SCTInit
	ACToolBarLight1.Title = "SCT"
	ACToolBarLight1.SubTitle = "Stroop color test"
	MainPanel.LoadLayout("SCT")
	session = DateTime.Now
	
	SCTLabelName.Text = name
	SCTLabelInfo.Text = "Выберите ЦВЕТ, которым окрашено слово"
	SCTLabelPanel.Text = "НАЖМИТЕ ЗДЕСЬ ДЛЯ НАЧАЛА"
	
	SCTLabelLeft.Text = "Красный"
	SCTLabelRight.Text = "Синий"
	
	SCTx0 = MainPanel.Width/2
	SCTstarted = False
	SCTn = 1
	SCTtText = "" : SCTtColor = ""
	
	SCTTimer.Initialize("SCTTimer", 200)
	SCTTimer.Enabled = False
	
	SCTresult.Initialize
End Sub

Sub SCTTimer_Tick
	If SCTstarted Then
		If SCTn = 51 Then
			'SCTInit
		else If SCTn <= 10 Then
			If Rnd(0, 2) = 1 Then
				SCTLabelPanel.Text = "КРАСНЫЙ" : SCTLabelPanel.TextColor = Colors.Red
				SCTtText = "red" : SCTtColor = "red"
			Else
				SCTLabelPanel.Text = "СИНИЙ" : SCTLabelPanel.TextColor = Colors.blue
				SCTtText = "blue" : SCTtColor = "blue"
			End If
		Else
			Dim SCTrnd As Int
			SCTrnd = Rnd(1, 5)
			If SCTrnd = 1 Then
				SCTLabelPanel.Text = "КРАСНЫЙ" : SCTLabelPanel.TextColor = Colors.Blue
				SCTtText = "red" : SCTtColor = "blue"
			Else if SCTrnd = 2 Then
				SCTLabelPanel.Text = "СИНИЙ" : SCTLabelPanel.TextColor = Colors.red
				SCTtText = "blue" : SCTtColor = "red"
			Else if SCTrnd = 3 Then
				SCTLabelPanel.Text = "КРАСНЫЙ" : SCTLabelPanel.TextColor = Colors.Red
				SCTtText = "red" : SCTtColor = "red"
			Else if SCTrnd = 4 Then
				SCTLabelPanel.Text = "СИНИЙ" : SCTLabelPanel.TextColor = Colors.blue
				SCTtText = "blue" : SCTtColor = "blue"
			End If
		End If
	End If
	SCTTimer.Enabled = False
End Sub

Sub SCTdoTest
	If SCTstarted Then
		If SCTn = 51 Then
			Msgbox("Исследование окончено, спасибо!","")
			SCTWriter.Initialize(File.OpenOutput(File.DirInternal,"/data/SCT."& session & ".csv",True))
			SCTWriter.WriteList(SCTresult)
			SCTWriter.Close
			SCTresult.Clear
			
			RESWriter.Initialize(File.OpenOutput(File.DirInternal,"/data/private.csv",True))
			RESWriter.WriteLine(session & ";" & group & ";" & "SCT" & ";" & name & ";" & sex & ";" & age & ";" & dhand & ";" & comment)
			RESWriter.Close
			
			ToastMessageShow ("Данные были успешно сохранены в файл " & File.DirInternal& "/data/SCT."& session & ".csv", True)
			SCTInit
		End If
	End If
End Sub

Sub SCTLabelPanel_Click
	If SCTstarted = False Then
		SCTstarted = True
		Msgbox("Внимание!", "Исследование начато")
		SCTTimer.Enabled = True
	End If
End Sub


'''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
'''''''''''''''''''''''''''''''''''                      TMT                      '''''''''''''''''''''''''''''''''''''''''''''''''''
'''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
Sub TMTInit
	ACToolBarLight1.Title = "TMT"
	ACToolBarLight1.SubTitle = "Trail making test"
	MainPanel.LoadLayout("TMT")
	
	TMTLabelName.Text = name
	TMTLabelN.Text = "Шаг " & TMTn & "/20"
	
	session = DateTime.Now
	
	TMTstart = ""
	
	TMTresult.Initialize
	TMTresult.Clear
	
	mc = GetDeviceLayoutValues.Height * 0.10
	MAZE_DISPLAY.Initialize(TMTpanel)
	MAZE_INVIS.Initialize(TMTpanelInv)
	
	MAZE_SIZE_H = 12
	MAZE_SIZE_V = 6
	
	If MAZE_SIZE_H Mod 2 = 0 Then
		MAZE_SIZE_H = MAZE_SIZE_H + 1
	End If
	If MAZE_SIZE_V Mod 2 = 0 Then
		MAZE_SIZE_V = MAZE_SIZE_V + 1
	End If
	
	Dim MAZE(MAZE_SIZE_V, MAZE_SIZE_H) As Int
		
	MAZE_CREATE : SHOW_MAZE
End Sub

Sub MAZE_CREATE
	Dim LIG, COLON As Int
	Dim LIG2, COLON2 As Int
	Dim TAB_PILE( 3, (MAZE_SIZE_H*MAZE_SIZE_V)/2 ) As Int
	Dim PILE As Int
	
	' Clean area
	' Value 2 = corridor. Will be then replaced by 0
	For LIG = 0 To MAZE_SIZE_V -1
		For COLON = 0 To MAZE_SIZE_H -1
			MAZE( LIG, COLON) = 2
		Next
	Next

	' cross
	For COLON = 0 To MAZE_SIZE_H -1 Step 2
		For LIG = 0 To MAZE_SIZE_V -1
			MAZE( LIG, COLON ) = 1								' 1 = wall
		Next
	Next
	For LIG = 0 To MAZE_SIZE_V -1 Step 2
		For COLON = 0 To MAZE_SIZE_H -1
			MAZE( LIG, COLON ) = 1
		Next
	Next
	
	' Step 1 : create random  maze
	For LIG = 1 To MAZE_SIZE_V -3  Step 2
		For COLON = 1 To MAZE_SIZE_H -3 Step 2
			If Rnd( 0,2 ) = 0 Then
				MAZE( LIG, COLON+1 ) = 2                                 ' door on right
			Else
				MAZE( LIG+1, COLON ) = 2                                 ' door below
			End If
		Next
	Next
	
	' Step 2 : Make the maze faisable
	' doing a "fill" an opening not accessible part of the maze
	PILE = 1
	TAB_PILE( 1, 0 ) = 1                                             ' column
	TAB_PILE( 2, 0 ) = 1                                             ' Line
	'PILE = PILE +1
	Do While PILE > 0
	
		Do While PILE > 0
			PILE = PILE - 1
			COLON = TAB_PILE( 1, PILE )                                   ' read column in the stack
			LIG = TAB_PILE( 2, PILE )                                     ' read line in the stack
			MAZE( LIG, COLON ) = 0											' 0 = make that coordonate as an accessible corridor
			If MAZE( LIG-1, COLON ) = 2 Then                              ' if opened above
				TAB_PILE( 1, PILE ) = COLON                                 ' mémorise column
				TAB_PILE( 2, PILE ) = LIG-1                                 ' mémorise line -1
				PILE = PILE +1
			End If
			If MAZE( LIG, COLON+1 ) = 2 Then                              ' si opened on right
				TAB_PILE( 1, PILE ) = COLON+1
				TAB_PILE( 2, PILE ) = LIG
				PILE = PILE +1
			End If
			If MAZE( LIG+1, COLON ) = 2 Then                              ' si opened below
				TAB_PILE( 1, PILE ) = COLON
				TAB_PILE( 2, PILE ) = LIG+1
				PILE = PILE +1
			End If
			If MAZE( LIG, COLON-1 ) = 2 Then                              ' si opened on left
				TAB_PILE( 1, PILE ) = COLON-1
				TAB_PILE( 2, PILE ) = LIG
				PILE = PILE +1
			End If
		  
		Loop
		' The stack is empty
		' Looking for not accessible part of the maze (value = 2)
		For LIG2 = 1 To MAZE_SIZE_V -1  Step 2
			For COLON2 = 1 To MAZE_SIZE_H -1 Step 2
			
				If MAZE( LIG2, COLON2 ) = 2 Then								' found a part of the maze not accessible

					If LIG2 = 1 Then                                           ' we are on the first line ?
						If COLON2 = 1 Then                                       ' We are on the first column too ?
							MAZE( LIG2, COLON2+1 ) = 0                             'create a door on right
						Else
							MAZE( LIG2, COLON2-1 ) = 0                            'create a door on left
						End If
						
					Else															' no longer on the first line
					
						If COLON2 = 1 Then                                       ' ... But on the first column
							MAZE( LIG2 -1, COLON2 ) = 0                          'create a door on right
						Else														' no longer on the first column
							If Rnd( 0, 2 ) = 1 And MAZE( LIG2, COLON2 -1 ) = 1 Then ' create door on left if there is a wall
								MAZE( LIG2, COLON2 -1 ) = 0
							Else
								MAZE( LIG2-1, COLON2 ) = 0                              'create door above
							End If
						End If
					End If
					TAB_PILE( 1, PILE ) = COLON2
					TAB_PILE( 2, PILE ) = LIG2
					PILE = PILE + 1
					COLON2 = MAZE_SIZE_H
					LIG2 = MAZE_SIZE_V
				End If
			Next
		Next
		
	Loop

	' Create entrance and exit
	' create door on left
	LIG = Rnd( 1,MAZE_SIZE_V - 3 )                            			' between 1 and bottom
	If MAZE( LIG, 1 ) = 0 Then                                         	' If there is no wall after the door
		MAZE( LIG, 0 ) = 0												' create the door
	Else
		MAZE( LIG + 1,0 ) = 0											' create the door above the random coordonates
	End If
	' create door on right
	LIG = Rnd( 1, MAZE_SIZE_V -3 )
	If MAZE( LIG, MAZE_SIZE_H -2 ) = 0 Then
		MAZE( LIG, MAZE_SIZE_H - 1 ) = 0
	Else
		MAZE( LIG +1, MAZE_SIZE_H -1 ) = 0
	End If


End Sub

Sub SHOW_MAZE
	Dim LIG, COLON As Int
	Dim BLOCK As Rect
	
	Dim va = GetDeviceLayoutValues.Width/2 As Int
	Dim ha = GetDeviceLayoutValues.Height/2 As Int
	va = va - mc*MAZE_SIZE_H/2
	ha = ha - mc*MAZE_SIZE_V/2-30
	
	BLOCK.Initialize( 0+va, 0+ha, MAZE_SIZE_H*mc+va, MAZE_SIZE_V*mc+ha )
	MAZE_DISPLAY.DrawRect( BLOCK, Colors.LightGray, True, 1dip )
	MAZE_INVIS.DrawRect( BLOCK, Colors.Transparent, True, 1dip )
	Activity.Invalidate
		
	For LIG = 0 To MAZE_SIZE_V -1
		For COLON = 0 To MAZE_SIZE_H -1
			If MAZE( LIG, COLON ) = 1 Then
				BLOCK.Initialize( COLON*mc+va, LIG*mc+ha, (COLON*mc)+mc+va, (LIG*mc)+mc +ha)
				MAZE_DISPLAY.DrawRect( BLOCK, Colors.DarkGray, True, 1dip)
				MAZE_INVIS.DrawRect( BLOCK, Colors.DarkGray, True, 1dip)
				Activity.Invalidate
			End If
		Next
	Next



End Sub

Sub TMTpanel_touch(Action As Int, tx As Float, ty As Float)
	If (ty >= 0 And ty <= MAZE_DISPLAY.Bitmap.Height) And (tx >= 0 And tx <= MAZE_DISPLAY.Bitmap.Width) Then
		Select Action
			Case MainPanel.ACTION_DOWN
				If TMTstart = "" And MAZE_INVIS.Bitmap.GetPixel(tx, ty) = -1 And tx > GetDeviceLayoutValues.Width/2 Then
					TMTstart = "right"
				else if TMTstart = "" And MAZE_INVIS.Bitmap.GetPixel(tx, ty) = -1 And tx < GetDeviceLayoutValues.Width/2 Then
					TMTstart = "left"
				End If
			Case MainPanel.ACTION_MOVE
				'Log(MAZE_INVIS.Bitmap.GetPixel(tx, ty))
				If TMTstart <> "" Then
					MAZE_DISPLAY.DrawCircle(tx, ty, 10dip, Colors.Green, True, 1Dip)
					Activity.Invalidate3(tx - 10dip, ty - 10dip, tx + 10dip, ty + 10dip)
				
					TMTresult.Add(DateTime.Now & ";" & TMTn & ";" & (tx/GetDeviceLayoutValues.Width) & ";" & (ty/GetDeviceLayoutValues.Height) & ";" & MAZE_INVIS.Bitmap.GetPixel(tx, ty))
				End If
			Case MainPanel.ACTION_UP
				If (TMTstart = "left" And MAZE_INVIS.Bitmap.GetPixel(tx, ty) = -1  And tx > GetDeviceLayoutValues.Width/2) Or (TMTstart = "right" And MAZE_INVIS.Bitmap.GetPixel(tx, ty) = -1  And tx < GetDeviceLayoutValues.Width/2) Then
					TMTWriter.Initialize(File.OpenOutput(File.DirInternal,"/data/TMT."& session & ".csv",True))
					TMTWriter.WriteList(TMTresult)
					TMTWriter.Close
					TMTresult.Clear
				
					TMTn = TMTn + 1 : TMTstart = "" : MainPanel.RemoveAllViews : MainPanel.LoadLayout("TMT") : MAZE_DISPLAY.Initialize(TMTpanel) : MAZE_INVIS.Initialize(TMTpanelInv) : MAZE_CREATE : SHOW_MAZE : TMTLabelN.Text = "Шаг " & TMTn & "/20"
					TMTLabelName.Text = name
				End If
		End Select
	End If
	
	If TMTn = 21 Then
		Msgbox("Исследование окончено, спасибо!","")

		RESWriter.Initialize(File.OpenOutput(File.DirInternal,"/data/private.csv",True))
		RESWriter.WriteLine(session & ";" & group & ";" & "TMT" & ";" & name & ";" & sex & ";" & age & ";" & dhand & ";" & comment)
		RESWriter.Close

		ToastMessageShow ("Данные были успешно сохранены в файл " & File.DirInternal& "/data/TMT."& session & ".csv", True)
		TMTn = 1
		TMTInit
	End If
End Sub

'''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
'''''''''''''''''''''''''''''''''''                      CBT                      '''''''''''''''''''''''''''''''''''''''''''''''''''
'''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
Sub CBTInit
	ACToolBarLight1.Title = "CBT"
	ACToolBarLight1.SubTitle = "Corsi block test"
	MainPanel.RemoveAllViews
	MainPanel.LoadLayout("CBT")
	
	CBTtimer.Initialize("CBTtimer", 1000)
	CBTtimer.Enabled = False
	CBTtimerContinue.Initialize("CBTtimerContinue", 1500)
	CBTtimerContinue.Enabled = False
	
	CBTrnd.Initialize

	CBTCanvas.Initialize(CBTpanel)
	CBTCanvasInvis.Initialize(CBTpanelInv)
	
	CBTi = 0
	CBTn = 1
	CBTmax = 3
	CBTcurrent = 1
	CBTstarted = False

	CBTLabelName.Text = name
	CBTLabelN.Text = "Шаг " & CBTn & "/20"
	
	session = DateTime.Now
		
	CBTresult.Initialize : CBTresult.Clear
	
	coords.Initialize : coords.Clear
	
	CBTblocksize = CBTCanvas.Bitmap.Width/6
	
	For x = CBTblocksize To CBTCanvas.Bitmap.Width-CBTblocksize Step Round((CBTCanvas.Bitmap.Width-CBTblocksize)/4)
		For y = CBTblocksize To CBTCanvas.Bitmap.Height-CBTblocksize Step Round((CBTCanvas.Bitmap.Height-CBTblocksize)/6)
			Dim tmp As coordinates
			tmp.x = x
			tmp.y = y
			coords.Add(tmp)
		Next
	Next
End Sub

Sub CBTform
	CBTCanvas.DrawColor(Colors.Transparent)
	CBTCanvasInvis.DrawColor(Colors.Transparent)
	CBTLabelN.Text = "Шаг " & CBTn & "/20"

	CBTrnd = CBTShuffle(10, 0, coords.Size-1)
	Dim CBTblock As Rect
	Dim CBTtmp As coordinates

	For i = 0 To 9
		CBTtmp = coords.Get(CBTrnd.GetKeyAt(i))
		CBTblock.Initialize(CBTtmp.x, CBTtmp.y, CBTtmp.x + CBTblocksize, CBTtmp.y + CBTblocksize)
		CBTCanvas.DrawRect(CBTblock, Colors.blue, True, 1dip)
		CBTCanvasInvis.DrawRect(CBTblock, Colors.Blue, True, 1dip)
		Activity.Invalidate
	Next
	CBTn = CBTn + 1
End Sub

Sub CBTpanel_touch(Action As Int, tx As Float, ty As Float)
	If (ty >= 0 And ty <= CBTCanvasInvis.Bitmap.Height) And (tx >= 0 And tx <= CBTCanvasInvis.Bitmap.Width) Then
		Select Action
			Case MainPanel.ACTION_UP
				If CBTstarted = False Then
					If Msgbox2("Длина последовательности - " & CBTmax, "Corsi block test", "Да", "", "Нет", Null) = DialogResponse.POSITIVE Then
						CBTform : CBTstarted = True : CBTtimer.Enabled = True
					End If
				End If
				Dim CBTtarget = CBTCanvasInvis.Bitmap.GetPixel(tx, ty)*-1-1 As Int
				If CBTstarted = True And CBTtimer.Enabled = False And CBTtarget >= 0 And CBTtarget <= 9 Then
					If CBTcurrent <= CBTmax Then
						CBTresult.Add((CBTn-1) & ";" & (DateTime.Now - CBTstart) & ";" & (CBTCanvasInvis.Bitmap.GetPixel(tx, ty)*-1))
						CBTstart = DateTime.Now
						Dim CBTblock As Rect
						Dim CBTtmp As coordinates
						CBTtmp = coords.Get(CBTrnd.GetKeyAt(CBTtarget))
						CBTblock.Initialize(CBTtmp.x, CBTtmp.y, CBTtmp.x + CBTblocksize, CBTtmp.y + CBTblocksize)
						CBTCanvas.DrawRect(CBTblock, Colors.Yellow, True, 1dip)
						Activity.Invalidate
						
						If CBTcurrent = CBTmax Then
							CBTDraw(CBTrnd, Colors.Gray, 9)
							CBTtimerContinue.Enabled = True
						End If
						
						CBTcurrent = CBTcurrent + 1
					Else
					
					End If
				End If
		End Select
	End If
End Sub

Sub CBTtimer_tick
	If ActiveView = "CBT" Then
		Dim CBTblock As Rect
		Dim CBTtmp As coordinates
		If CBTi <= CBTmax - 1 Then
			For i = 0 To 9
				CBTtmp = coords.Get(CBTrnd.GetKeyAt(i))
				CBTblock.Initialize(CBTtmp.x, CBTtmp.y, CBTtmp.x + CBTblocksize, CBTtmp.y + CBTblocksize)
				CBTCanvas.DrawRect(CBTblock, Colors.blue, True, 1dip)
				CBTCanvasInvis.DrawRect(CBTblock, i*-1-1, True, 1dip)
				Activity.Invalidate
			Next

			CBTtmp = coords.Get(CBTrnd.GetKeyAt(CBTi))
			CBTblock.Initialize(CBTtmp.x, CBTtmp.y, CBTtmp.x + CBTblocksize, CBTtmp.y + CBTblocksize)
			CBTCanvas.DrawRect(CBTblock, Colors.Yellow, True, 1dip)
			Activity.Invalidate
			CBTstart = DateTime.Now+1000
			CBTi = CBTi + 1
		Else
			For i = 0 To 9
				CBTtmp = coords.Get(CBTrnd.GetKeyAt(i))
				CBTblock.Initialize(CBTtmp.x, CBTtmp.y, CBTtmp.x + CBTblocksize, CBTtmp.y + CBTblocksize)
				CBTCanvas.DrawRect(CBTblock, Colors.blue, True, 1dip)
				Activity.Invalidate
			Next
			CBTtimer.Enabled = False
		End If
	End If
End Sub

Sub CBTtimerContinue_tick
	CBTform : CBTstarted = True : CBTtimer.Enabled = True
	CBTcurrent = 1 : CBTi = 0
	CBTtimerContinue.Enabled = False
	If CBTn = 12 Then
		CBTmax = CBTmax + 1
		Msgbox("Длина последовательности - " & CBTmax, "Corsi block test")
'	Else If CBTn = 11 Then
'		CBTmax = CBTmax + 1
'		Msgbox("Длина последовательности - " & CBTmax, "Corsi block test")
	Else If CBTn = 17 Then
		CBTmax = CBTmax + 1
		Msgbox("Длина последовательности - " & CBTmax, "Corsi block test")
	Else If CBTn = 22 Then
		Msgbox("Исследование завершено!", "Corsi block test")
				
		CBTWriter.Initialize(File.OpenOutput(File.DirInternal,"/data/CBT."& session & ".csv",True))
		CBTWriter.WriteList(CBTresult)
		CBTWriter.Close
		CBTresult.Clear
		
		RESWriter.Initialize(File.OpenOutput(File.DirInternal,"/data/private.csv",True))
		RESWriter.WriteLine(session & ";" & group & ";" & "CBT" & ";" & name & ";" & sex & ";" & age & ";" & dhand & ";" & comment)
		RESWriter.Close
		
		CBTInit
		ToastMessageShow ("Данные были успешно сохранены в файл " & File.DirInternal& "/data/CBT."& session & ".csv", True)
	End If
End Sub

Sub CBTDraw(CBTr As Map, Color As Int, i As Int)
	Dim CBTblock As Rect
	Dim CBTtmp As coordinates

	For i = 0 To i
		CBTtmp = coords.Get(CBTr.GetKeyAt(i))
		CBTblock.Initialize(CBTtmp.x, CBTtmp.y, CBTtmp.x + CBTblocksize, CBTtmp.y + CBTblocksize)
		CBTCanvas.DrawRect(CBTblock, Color, True, 1dip)
		Activity.Invalidate
	Next
End Sub

Sub CBTShuffle (NumbersToCreate As Int, MinNumber As Int, MaxNumber As Int) As Map
	Dim NumbersMap As Map
	NumbersMap.Initialize
        
	Do Until NumbersMap.size=NumbersToCreate
		NumbersMap.Put(Rnd(MinNumber,MaxNumber+1),Null)
	Loop
    
	Return (NumbersMap)
End Sub

'''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
'''''''''''''''''''''''''''''''''''                     tests                     '''''''''''''''''''''''''''''''''''''''''''''''''''
'''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
Sub testsInit
	ACToolBarLight1.Title = "Опросники"
	ACToolBarLight1.SubTitle = "Классические опросники"
	MainPanel.LoadLayout("tests")
	testsLabelQuestion.Text = "Выберите тест:"
	
	session = DateTime.Now
	
	testresult.Initialize
	questions.Initialize
	
	testCurrent = "main"
	
	testsCustomListView.AddTextItem("СМИЛ", "smil")
	testsCustomListView.AddTextItem("Данные анамнеза", "anamnesis")
	testsCustomListView.AddTextItem("AUDIT", "audit")
	testsCustomListView.AddTextItem("CAGE", "cage")
	testsCustomListView.AddTextItem("Копинг-тест", "coping")
	testsCustomListView.AddTextItem("Шкала тревоги Спилбергера-Ханина", "stai")
	testsCustomListView.AddTextItem("Тест склонности к риску Шуберта", "schubert")
	testsCustomListView.AddTextItem("Опросник Басса-Дарки", "buss.durkey")
	testsCustomListView.AddTextItem("16-факторный опросник Р. Кеттела", "16pf")
	testsCustomListView.AddTextItem("Опросник Мини-мульт", "mini.mult")
	testsCustomListView.AddTextItem("Характерологический опросник Леонгарда", "leongard")
	testsCustomListView.AddTextItem("Личностный опросник Г. Айзенка", "eysenck")
	
	testi = 1
End Sub

Sub testsCustomListView_ItemClick (Index As Int, Value As Object)
	Dim su As StringUtils
	
	MainPanel.RemoveAllViews	
	MainPanel.LoadLayout("test")
	testLabelname.Text = name
	
	If Value = "anamnesis" Then
		questions = su.LoadCSV(File.DirAssets, "anamnesis.csv", ";")
		testCurrent = "anamnesis"
		ACToolBarLight1.Title = "Классические опросники"
		ACToolBarLight1.SubTitle = "Сбор данных анамнеза"
	else If Value = "audit" Then
		questions = su.LoadCSV(File.DirAssets, "audit.csv", ";")
		testCurrent = "audit"
		ACToolBarLight1.Title = "Классические опросники"
		ACToolBarLight1.SubTitle = "AUDIT"
	else If Value = "cage" Then
		questions = su.LoadCSV(File.DirAssets, "cage.csv", ";")
		testCurrent = "cage"
		ACToolBarLight1.Title = "Классические опросники"
		ACToolBarLight1.SubTitle = "CAGE"
	else If Value = "coping" Then
		questions = su.LoadCSV(File.DirAssets, "coping.csv", ";")
		testCurrent = "coping"
		ACToolBarLight1.Title = "Классические опросники"
		ACToolBarLight1.SubTitle = "Копинг-тест"
	else If Value = "stai" Then
		questions = su.LoadCSV(File.DirAssets, "stai.csv", ";")
		testCurrent = "stai"
		ACToolBarLight1.Title = "Классические опросники"
		ACToolBarLight1.SubTitle = "Шкала тревоги Спилбергера-Ханина"
	Else if Value = "schubert" Then
		questions = su.LoadCSV(File.DirAssets, "schubert.csv", ";")
		testCurrent = "schubert"
		ACToolBarLight1.Title = "Классические опросники"
		ACToolBarLight1.SubTitle = "Тест склонности к риску Шуберта"
	Else if Value = "buss.durkey" Then
		questions = su.LoadCSV(File.DirAssets, "buss.durkey.csv", ";")
		testCurrent = "buss.durkey"
		ACToolBarLight1.Title = "Классические опросники"
		ACToolBarLight1.SubTitle = "Опросник Басса-Дарки"
	Else if Value = "16pf" Then
		questions = su.LoadCSV(File.DirAssets, "16pf.csv", ";")
		testCurrent = "16pf"
		ACToolBarLight1.Title = "Классические опросники"
		ACToolBarLight1.SubTitle = "16-факторный опросник Р. Кеттела"
	Else if Value = "mini.mult" Then
		questions = su.LoadCSV(File.DirAssets, "mini.mult.csv", ";")
		testCurrent = "mini.mult"
		ACToolBarLight1.Title = "Классические опросники"
		ACToolBarLight1.SubTitle = "Опросник Мини-мульт"
	Else if Value = "leongard" Then
		questions = su.LoadCSV(File.DirAssets, "leongard.csv", ";")
		testCurrent = "leongard"
		ACToolBarLight1.Title = "Классические опросники"
		ACToolBarLight1.SubTitle = "Характерологический опросник Леонгарда"
	Else if Value = "eysenck" Then
		questions = su.LoadCSV(File.DirAssets, "eysenck.csv", ";")
		testCurrent = "eysenck"
		ACToolBarLight1.Title = "Классические опросники"
		ACToolBarLight1.SubTitle = "Личностный опросник Г. Айзенка"
	Else if Value = "smil" Then
		If sex = "муж" Then
			questions = su.LoadCSV(File.DirAssets, "smil.m.csv", ";")
			testCurrent = "smil.m"
			ACToolBarLight1.Title = "Классические опросники"
			ACToolBarLight1.SubTitle = "СМИЛ (мужской)"
		else if sex = "жен" Then
			questions = su.LoadCSV(File.DirAssets, "smil.f.csv", ";")
			testCurrent = "smil.f"
			ACToolBarLight1.Title = "Классические опросники"
			ACToolBarLight1.SubTitle = "СМИЛ (женский)"
		End If
	End If
	
	dotest(questions, testi)
End Sub

Sub dotest(q As List, qi As Int)
	Dim question() As String
	testtime = DateTime.Now
	qi = qi - 1

	If qi < q.Size Then
		question = q.Get(qi)
		testButton2.Enabled = False
		testButton3.Enabled = False
		testButton4.Enabled = False
		testButton5.Enabled = False

		testLabel.Text = question(0) & ". " & question(1)
		testButton1.Text = question(2)
		
		If question.Length = 4 Then
			testButton2.Text = question(3)
			If question(3) <> "" Then
				testButton2.Enabled = True
			End If
		End If
		If question.Length = 5 Then
			testButton2.Text = question(3)
			testButton3.Text = question(4)
			If question(3) <> "" Then
				testButton2.Enabled = True
			End If
			If question(4) <> "" Then
				testButton3.Enabled = True
			End If
		End If
		If question.Length = 6 Then
			testButton2.Text = question(3)
			testButton3.Text = question(4)
			testButton4.Text = question(5)
			If question(3) <> "" Then
				testButton2.Enabled = True
			End If
			If question(4) <> "" Then
				testButton3.Enabled = True
			End If
			If question(5) <> "" Then
				testButton4.Enabled = True
			End If
		End If
		If question.Length = 7 Then
			testButton2.Text = question(3)
			testButton3.Text = question(4)
			testButton4.Text = question(5)
			testButton5.Text = question(6)
			If question(3) <> "" Then
				testButton2.Enabled = True
			End If
			If question(4) <> "" Then
				testButton3.Enabled = True
			End If
			If question(5) <> "" Then
				testButton4.Enabled = True
			End If
			If question(6) <> "" Then
				testButton5.Enabled = True
			End If
		End If
	Else
		Msgbox("Исследование окончено, спасибо!","")
		testWriter.Initialize(File.OpenOutput(File.DirInternal,"/data/" & testCurrent & "." & session & ".csv",True))
		testWriter.WriteList(testresult)
		testWriter.Close
		testresult.Clear
					
		RESWriter.Initialize(File.OpenOutput(File.DirInternal,"/data/private.csv",True))
		RESWriter.WriteLine(session & ";" & group & ";" & testCurrent & ";" & name & ";" & sex & ";" & age & ";" & dhand & ";" & comment)
		RESWriter.Close
		
		MainPanel.RemoveAllViews
		testsInit
		testButton1.Enabled = True
		testButton2.Enabled = True
		testButton3.Enabled = True
		testButton4.Enabled = True
		testButton5.Enabled = True
	End If
End Sub

Sub testbutton1_click
	If testButton1.Text = "Введите ответ" Then
		questionrequester
	Else
		'testresult.Add(testtime & ";" & name & ";" & testi & ";" & testButton1.Text)
		testresult.Add(testtime & ";" & testi & ";" & testButton1.Text)
		Log(testresult.Get(testi-1))
		testi = testi + 1
		dotest(questions, testi)
	End If
End Sub

Sub testbutton2_click
	If testButton2.Text = "Введите ответ" Then
		questionrequester
	Else
		'testresult.Add(testtime & ";" & name & ";" & testi & ";" & testButton2.Text)
		testresult.Add(testtime & ";" & testi & ";" & testButton2.Text)
		Log(testresult.Get(testi-1))
		testi = testi + 1
		dotest(questions, testi)
	End If
End Sub

Sub testbutton3_click
	If testButton3.Text = "Введите ответ" Then
		questionrequester
	Else
		'testresult.Add(testtime & ";" & name & ";" & testi & ";" & testButton3.Text)
		testresult.Add(testtime & ";" & testi & ";" & testButton3.Text)
		Log(testresult.Get(testi-1))
		testi = testi + 1
		dotest(questions, testi)
	End If
End Sub

Sub testbutton4_click
	If testButton4.Text = "Введите ответ" Then
		questionrequester
	Else
		'testresult.Add(testtime & ";" & name & ";" & testi & ";" & testButton4.Text)
		testresult.Add(testtime & ";" & testi & ";" & testButton4.Text)
		Log(testresult.Get(testi-1))
		testi = testi + 1
		dotest(questions, testi)
	End If
End Sub

Sub testbutton5_click
	If testButton5.Text = "Введите ответ" Then
		questionrequester
	Else
		'testresult.Add(testtime & ";" & name & ";" & testi & ";" & testButton5.Text)
		testresult.Add(testtime & ";" & testi & ";" & testButton5.Text)
		Log(testresult.Get(testi-1))
		testi = testi + 1
		dotest(questions, testi)
	End If
End Sub

Sub questionrequester
	Dim sf As Object = questionPicker.ShowAsync("Укажите нужный ответ", "ОК", "Отмена", "", Null, True)
	questionPicker.SetSize(100%x, 400dip)
	Wait For (sf) Dialog_Ready(pnl As Panel)
	pnl.LoadLayout("questionrequester")
	Wait For (sf) Dialog_Result (Result As Int)
	If Result = DialogResponse.POSITIVE Then
		If True Then 'questionrequesterEditText.Text <> "" Then СДЕЛАТЬ ЖЕСТКОЕ УСЛОВИЕ ПОСЛЕ ВЫПУСКА В ПРОД???????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????????
			'testresult.Add(testtime & ";" & name & ";" & testi & ";" & questionrequesterEditText.Text)
			testresult.Add(testtime & ";" & testi & ";" & questionrequesterEditText.Text)
			Log(testresult.Get(testi-1))
			testi = testi + 1
			dotest(questions, testi)
		Else
			Msgbox("Введите ответ","Ошибка! Пустое поле")
		End If
	End If
End Sub

'''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
'''''''''''''''''''''''''''''''''''                    archive                    '''''''''''''''''''''''''''''''''''''''''''''''''''
'''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
Sub archiveInit
	ACToolBarLight1.Title = "Архив"
	ACToolBarLight1.SubTitle = "Операции с результатами"
	MainPanel.LoadLayout("archive")
	
	Dim list As List
	list = File.ListFiles(File.DirInternal & "/data")
	For i = 0 To list.Size - 1
		ArchiveCustomListView.AddTextItem(list.Get(i), 0)
	Next
End Sub

Sub ArchiveButtonSave_Click
	Dim arc As Archiver
	
	archiveClearData
	
	If File.ListFiles(File.DirInternal & "/data").Size > 0 Then
		FileToSend = "archive." & DateTime.Now & ".zip"
		arc.ASyncZipFolder(File.DirInternal & "/data", Starter.Provider.SharedFolder, FileToSend, "arc")
	Else
		Msgbox("А что архивировать собрались, если результатов нет?","Ошибка!")
	End If
End Sub

Sub arc_ZipDone(CompletedWithoutError As Boolean, NbOfFiles As Int)
	Dim in As Intent
	in.Initialize(in.ACTION_SEND, "")
	in.SetType("text/plain")
	in.PutExtra("android.intent.extra.STREAM", Starter.Provider.GetFileUri(FileToSend))
	in.Flags = 1 'FLAG_GRANT_READ_URI_PERMISSION
	StartActivity(in)
End Sub

Sub ArchiveButtonClearResults_Click
	Dim list As List
	Dim ans As Int
	
	list = File.ListFiles(File.DirInternal & "/data")
	If list.Size > 0 Then
		ans = Msgbox2("Удалить все результаты?", "Очистка данных", "Да", "", "Нет", Null)
		If ans = DialogResponse.POSITIVE Then
			For i = 0 To list.Size - 1
				File.Delete(File.DirInternal & "/data", list.Get(i))
			Next
			archiveInit
		End If
	Else
		Msgbox("А что стирать собрались, если результатов нет?","Ошибка!")
	End If
End Sub

Sub ArchiveCustomListView_ItemClick (Index As Int, Value As Object)
	Log(Index & " : " & Value)

	Dim r As List
	Dim x As id
		
	r.Initialize
	r.AddAll(Array As String("Отправить", "Удалить"))
   	Dim m As Int = x.InputList1(r, "Выберите действие")
	
	If m = 0 Then
		FileToSend = ArchiveCustomListView.GetPanel(Index).GetView(0).Text
		File.Copy(File.DirInternal & "/data", FileToSend, Starter.Provider.SharedFolder, FileToSend)
				
		Dim in As Intent
		in.Initialize(in.ACTION_SEND, "")
		in.SetType("text/plain")
		in.PutExtra("android.intent.extra.STREAM", Starter.Provider.GetFileUri(FileToSend))
		in.Flags = 1 'FLAG_GRANT_READ_URI_PERMISSION
		StartActivity(in)
	else if m = 1 Then
		File.Delete(File.DirInternal & "/data", ArchiveCustomListView.GetPanel(Index).GetView(0).Text)
		archiveInit
	End If
End Sub

Sub archiveClearData
	Dim list As List
	
	list = File.ListFiles(Starter.Provider.SharedFolder)
	If list.Size > 0 Then
		For i = 0 To list.Size - 1
			File.Delete(Starter.Provider.SharedFolder, list.Get(i))
		Next
	End If
End Sub
















