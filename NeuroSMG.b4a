Build1=Default,NeuroSMG.app
File1=FOT.bal
File2=hamburger.png
File3=Left.bal
File4=login.bal
File5=main.bal
FileGroup1=Default Group
FileGroup2=Default Group
FileGroup3=Default Group
FileGroup4=Default Group
FileGroup5=Default Group
Group=Default Group
IconFile=
Library1=core
Library2=appcompat
Library3=xui
Library4=viewsex
Library5=phone
ManifestCode='This code will be applied to the manifest file during compilation.~\n~'You do not need to modify it in most cases.~\n~'See this link for for more information: http://www.basic4ppc.com/forum/showthread.php?p=78136~\n~AddManifestText(~\n~<uses-sdk android:minSdkVersion="7" android:targetSdkVersion="26"/>~\n~<supports-screens android:largeScreens="true" ~\n~    android:normalScreens="true" ~\n~    android:smallScreens="true" ~\n~    android:anyDensity="true"/>)~\n~SetApplicationAttribute(android:icon, "@drawable/icon")~\n~SetApplicationAttribute(android:label, "$LABEL$")~\n~'End of default text.~\n~~\n~SetApplicationAttribute(android:theme, "@style/MyAppTheme")~\n~~\n~CreateResource(values, theme.xml,~\n~<resources>~\n~    <style name="MyAppTheme" parent="Theme.AppCompat.Light.NoActionBar">~\n~        <item name="colorPrimary">#0098FF</item>~\n~        <item name="colorPrimaryDark">#007CF5</item>~\n~        <item name="colorAccent">#AAAA00</item>~\n~        <item name="windowNoTitle">true</item>~\n~        <item name="windowActionBar">false</item>~\n~		<item name="android:windowTranslucentNavigation">false</item>~\n~     	<item name="android:windowTranslucentStatus">true</item>~\n~    </style>~\n~</resources>~\n~)
Module1=Starter
Module2=B4XDrawer
Module3=test
NumberOfFiles=5
NumberOfLibraries=5
NumberOfModules=3
Version=9.01
@EndOfDesignText@
#Region  Project Attributes 
	#ApplicationLabel: NeuroSMG
	#VersionCode: 1
	#VersionName: AttractiveAbsolute
	'SupportedOrientations possible values: unspecified, landscape or portrait.
	#SupportedOrientations: unspecified
	#CanInstallToExternalStorage: False
#End Region

#Region  Activity Attributes 
	#FullScreen: False
	#IncludeTitle: True
#End Region
	#Extends: android.support.v7.app.AppCompatActivity

#If Java

public boolean _onCreateOptionsMenu(android.view.Menu menu) {
    if (processBA.subExists("activity_createmenu")) {
        processBA.raiseEvent2(null, true, "activity_createmenu", false, new de.amberhome.objects.appcompat.ACMenuWrapper(menu));
        return true;
    }
    else
        return false;
}
#End If	

#IgnoreWarnings: 11
Sub Activity_CreateMenu(Menu As ACMenu)
	Dim item As ACMenuItem
	Dim ph As Phone
	Dim bd As BitmapDrawable

	bd = ph.GetResourceDrawable(17301555)
	Menu.Add2(10, 1, "Add", bd).ShowAsAction = item.SHOW_AS_ACTION_IF_ROOM
'	
'	bd = ph.GetResourceDrawable(17301564)
'	Menu.Add2(10, 2, "Delete Round", bd).ShowAsAction = item.SHOW_AS_ACTION_IF_ROOM

'	bd = ph.GetResourceDrawable(17301566)
'	Menu.Add2(10, 3, "Edit Round", bd).ShowAsAction = item.SHOW_AS_ACTION_IF_ROOM

	bd = ph.GetResourceDrawable(17301577)
	Menu.Add2(10, 4, "Pref", bd).ShowAsAction = item.SHOW_AS_ACTION_IF_ROOM

'	bd = ph.GetResourceDrawable(17301568)
'	Menu.Add2(10, 5, "Help", bd).ShowAsAction = item.SHOW_AS_ACTION_ALWAYS
	
	
	'Menu.Add(1, 2, "И?", Null)
End Sub
	
Sub Process_Globals
	Dim ActiveView As String
	Dim FOTtestTimer As Timer
End Sub

Sub Globals
	Private ACToolBarLight1 As ACToolBarLight
	Private ToolbarHelper As ACActionBar
	Private Drawer As B4XDrawer
	Dim cs As CSBuilder
	Private ListViewLeft As ListView
	Private MainPanel As Panel
	Private Button As Button
	Private Button1 As Button
	Dim p As Phone
	
	'''''''''''''''''''''' Login
	Private LoginEditTextName As EditText
	Private LoginEditTextAge As EditText
	Private LoginToggleButtonSex As ToggleButton
	Private LoginToggleButtonHand As ToggleButton
	
	Dim name As String
	Dim age As String
	Dim sex As String
	Dim dhand As String
	
	'''''''''''''''''''''' FOT
	Dim FOTCanvasRes As Canvas
	Dim FOTBitmapRes As Bitmap
	Dim FOTButtonHand As Button
	Dim FOTLabelTicks As Label
	Dim FOTTimerLabel As Label
	Dim FOTButtonReset As Button
	Dim FOTButtonShare As Button
	Dim FOTButtonDelete As Button
	
	Dim FOTtestDuration As Int
	Dim FOTcurrentTime As Int
	Dim FOTcoords As String
	Dim FOTtickduration As String
	Dim FOTTimeLeft As Int
	Dim FOTTimerStarted As Boolean
	Dim FOThand As String
	Dim FOTsession As Long
	Dim FOTWriter As TextWriter
	Dim FOTnow As Long
	Dim FOTresult As List
	Dim FOTticks As List
	Dim FOTx As Float
	Dim FOTy As Float
	Dim FOTt1, FOTt2, duration As Long
	Dim FOTlogged As Boolean
	
	Dim Vibrate As PhoneVibrate
	Dim sharefname As String
	
	'''''''''''''''''''''' RAT
	
End Sub

Sub Activity_Create(FirstTime As Boolean)
	If File.Exists(File.DirInternal & "FOT", "") = False Then
		File.MakeDir(File.DirInternal, "FOT")
	End If
	
	Drawer.Initialize(Me, "Drawer", Activity, 300dip)
	Drawer.CenterPanel.LoadLayout("main")
	ToolbarHelper.Initialize
	ToolbarHelper.ShowUpIndicator = True 'set to true to show the up arrow
	Dim bd As BitmapDrawable
	bd.Initialize(LoadBitmap(File.DirAssets, "hamburger.png"))
	ToolbarHelper.UpIndicatorDrawable =  bd
	ACToolBarLight1.InitMenuListener
	Drawer.LeftPanel.LoadLayout("Left")
	
	ListViewLeft.AddSingleLine("Профиль")
	ListViewLeft.AddSingleLine("FOT")
	ListViewLeft.AddSingleLine("RAT")
	ListViewLeft.AddSingleLine("IAT")
	ListViewLeft.AddSingleLine("Настройки")
	ListViewLeft.AddSingleLine("О программе")
End Sub

Sub ACToolBarLight1_NavigationItemClick
	Drawer.LeftOpen = Not(Drawer.LeftOpen)
End Sub

Sub ACToolBarLight1_MenuItemClick (Item As ACMenuItem)
'	If Item.Title = "Add" Then
'		cs.Initialize.Append("FontAwesome: ").Typeface(Typeface.FONTAWESOME).Append(Chr(0xF209)).PopAll
'		ToastMessageShow(cs, True)
'		Dim btntext As CSBuilder
'		Button.Text = btntext.initialize.Append("Click me!").Typeface(Typeface.FONTAWESOME).Append(Chr(0xF062)).PopAll
'	End If
'	If Item.Title = "Pref" Then
'		cs.Initialize.Append("MaterialIcons: ").Typeface(Typeface.MATERIALICONS).VerticalAlign(5dip).Append(Chr(0xE531)).PopAll
'		ToastMessageShow(cs, True)
'		Dim btntext As CSBuilder
'		Button.Text = btntext.initialize.Append("Click me!").Typeface(Typeface.FONTAWESOME).Append(Chr(0xF063)).PopAll
'	End If
End Sub

Sub Activity_KeyPress (KeyCode As Int) As Boolean 
	If KeyCode = KeyCodes.KEYCODE_BACK And Drawer.LeftOpen Then
		Drawer.LeftOpen = False
		Return True
	End If
	Return False
End Sub


Sub Activity_Resume
	MainPanel.RemoveAllViews
	Drawer.LeftOpen = False
	p.HideKeyboard(Activity)
	
	If ActiveView = "login" Then
		MainPanel.LoadLayout("login")
	Else If ActiveView = "FOT" Then
		MainPanel.LoadLayout("FOT")
		
		FOTCanvasRes.Initialize(Activity)
		FOTBitmapRes.Initialize3(FOTCanvasRes.Bitmap)
	
		FOTtestTimer.Initialize("testTimer", 1000)
		FOTtestTimer.Enabled = True
	
		FOTButtonHand.Text = "Правая рука"
	
		FOTTimerStarted = False
		FOTtestDuration = 30
		FOTTimeLeft = FOTtestDuration
		FOThand = "right"
		FOTButtonReset.Text = "Начать"
		FOTTimerLabel.Text = FOTTimeLeft
	
		FOTresult.Initialize
		FOTticks.Initialize
	Else If ActiveView = "login" Then
	Else If ActiveView = "login" Then
	End If
End Sub

Sub Activity_Pause (UserClosed As Boolean)

End Sub

''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
Sub ListViewLeft_ItemClick (Position As Int, Value As Object)
	MainPanel.RemoveAllViews
	Drawer.LeftOpen = False
	
	If ActiveView = "FOT" Then
		FOTClearResults
	End If
		
	If Value = "Профиль" Then
		ActiveView = "login"
		ACToolBarLight1.Title = "Профиль"
		ACToolBarLight1.SubTitle = "Основные данные"
		MainPanel.LoadLayout("login")
		
		p.SetScreenOrientation(1)
	Else If Value = "FOT" Then
		ActiveView = "FOT"
		ACToolBarLight1.Title = "FOT"
		ACToolBarLight1.SubTitle = "Finger oscillation test"
		MainPanel.LoadLayout("FOT")
		
		p.SetScreenOrientation(1)
		
		FOTCanvasRes.Initialize(Activity)
		FOTBitmapRes.Initialize3(FOTCanvasRes.Bitmap)
	
		FOTtestTimer.Initialize("FOTtestTimer", 1000)
		FOTtestTimer.Enabled = True
	
		FOTButtonHand.Text = "Правая рука"
	
		FOTTimerStarted = False
		FOTtestDuration = 30
		FOTTimeLeft = FOTtestDuration
		FOThand = "right"
		FOTButtonReset.Text = "Начать"
		FOTTimerLabel.Text = FOTTimeLeft
	
		FOTresult.Initialize
		FOTticks.Initialize
	Else If Value = "RAT" Then
		ActiveView = "RAT"
		ACToolBarLight1.Title = "RAT"
		ACToolBarLight1.SubTitle = "Risk appetite test"
		'MainPanel.LoadLayout("RAT")
	Else If Value = "IAT" Then
		ActiveView = "IAT"
		ACToolBarLight1.Title = "IAT"
		ACToolBarLight1.SubTitle = "Implicit association test"
		'MainPanel.LoadLayout("RAT")
	End If
End Sub

'''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
'''''''''''''''''''''''''''''''''''                     Login                     '''''''''''''''''''''''''''''''''''''''''''''''''''
'''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
Sub LoginButtonStart_Click
	If LoginEditTextName.Text = "" Or LoginEditTextAge.Text = "" Then
		ToastMessageShow("Заполните все поля!", True)
	Else
		name = LoginEditTextName.Text
		age = LoginEditTextAge.Text
		
		If LoginToggleButtonHand.Checked = False Then
			dhand = "правая"
		Else
			dhand = "левая"
		End If
		If LoginToggleButtonSex.Checked = False Then
			sex = "муж"
		Else
			sex = "жен"
		End If
		
		Log(name & " ," & age & " ," & sex & " ," & dhand)
	End If
'	FOTButtonHand.Text = "Правая рука"
'	FOTButtonReset.Text = "Начать"
'	FOTCanvasRes.Initialize(MainPanel)
'	FOTBitmapRes.Initialize3(FOTCanvasRes.Bitmap)
End Sub

Sub LoginButtonDelete_Click
	name = ""  : LoginEditTextName.Text = ""
	age = ""   : LoginEditTextAge.Text = ""
	sex = ""   : LoginToggleButtonSex.Checked = False
	dhand = "" : LoginToggleButtonHand.Checked = False
End Sub


'''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
'''''''''''''''''''''''''''''''''''                      FOT                      '''''''''''''''''''''''''''''''''''''''''''''''''''
'''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''''
Sub MainPanel_Touch(Action As Int, tx As Float, ty As Float)
	If ActiveView = "FOT" Then
		Select Action
			Case MainPanel.ACTION_DOWN
				FOTt1 = DateTime.Now
			Case MainPanel.ACTION_UP
				FOTt2 = DateTime.Now
				duration = FOTt2-FOTt1
		End Select
		If Action = MainPanel.ACTION_UP And FOTButtonReset.Text = "Готов" Then
			Log(duration)
			'remove previous results
			If FOTTimerStarted = False Then
				FOTClearResults
				FOTButtonReset.Text = "Готов"
				FOTTimerStarted = True
				FOTButtonHand.Enabled  = False
				FOTButtonReset.Enabled  = False
				If FOThand = "right" Then
					FOTsession = DateTime.Now
				End If
			End If
		
			FOTCanvasRes.DrawCircle(tx, ty+85, 7dip, Colors.Red, True, 3dip)
			MainPanel.Invalidate3(tx - 7dip, ty - 7dip, tx + 7dip, ty + 7dip)
			FOTnow = DateTime.Now
			'Log(session)
			FOTcurrentTime = FOTtestDuration - FOTTimeLeft + 1
			FOTx = tx / MainPanel.Width
			FOTy = ty / MainPanel.Height
		
			FOTcoords = FOTsession & ";" & name & "," & age & "," & sex & "," & dhand & ";" & FOTnow & ";" & FOTcurrentTime & ";" & duration & ";" & FOTx & ";" & FOTy & ";" & FOThand
			Log(FOTcoords)
			FOTresult.Add(FOTcoords)
		
			FOTticks.Add(FOTnow)
			If FOTticks.Size > 1 Then
				FOTtickduration = FOTticks.Get(FOTticks.Size-1)-FOTticks.Get(FOTticks.Size-2)
				FOTLabelTicks.Text = FOTtickduration
			End If
		Else If Action = 0 And FOTButtonReset.Text = "Начать" Then
			Msgbox("", "Нажмите кнопку Начать")
		Else If Action = 0 And FOTButtonReset.Text = "Сохранить" Then
			Msgbox("", "Сохраните результаты перед продолжением!")
		End If
	End If
End Sub

Sub FOTButtonReset_Click
	If FOTButtonReset.Text = "Начать" Then
		FOTButtonReset.Text = "Готов"
		Msgbox("", "Коснитесь экрана для начала")
	Else If FOTButtonReset.Text = "Готов" Then
		Msgbox("", "Коснитесь экрана для начала")
	Else If FOTButtonReset.Text = "Сохранить" Then
		FOTWriter.Initialize(File.OpenOutput(File.DirInternal,"FOT/FOT.csv",True))
		FOTWriter.WriteList(FOTresult)
		FOTWriter.Close
		FOTresult.Clear
		ToastMessageShow ("Данные были успешно сохранены в файл " & File.DirInternal & "/FOT/FOT.csv", True)
		
		FOTClearResults
	End If
End Sub

Sub FOTtestTimer_Tick
	If FOTTimeLeft = 1 Then
		FOTTimeLeft = FOTtestDuration
		Vibrate.Vibrate (100)
		FOTTimerLabel.Text = FOTTimeLeft
		FOTLabelTicks.Text = ""
		FOTButtonReset.Text = "Сохранить"
		FOTTimerStarted = False
		ToastMessageShow ("Время вышло!", False)
		FOTButtonHand.Enabled  = True
		FOTButtonReset.Enabled  = True

		If FOTButtonHand.Text = "Правая рука" Then
			FOThand = "left"
			FOTButtonHand.Text = "Левая рука"
		Else If FOTButtonHand.Text = "Левая рука" Then
			FOThand = "right"
			FOTButtonHand.Text = "Правая рука"
		End If
	End If
	If FOTTimerStarted = True Then
		FOTTimeLeft = FOTTimerLabel.Text - 1
		FOTTimerLabel.Text = FOTTimeLeft
	End If
End Sub

Sub FOTClearResults
	FOTTimerStarted = False
	FOTTimeLeft = FOTtestDuration
	FOTTimerLabel.Text = FOTTimeLeft
	FOTLabelTicks.Text = ""
	If FOTticks.Size > 0 Then
		FOTticks.Clear()
	End If
	FOTCanvasRes.DrawColor(Colors.White)
	MainPanel.Invalidate()
	FOTButtonReset.Text = "Начать"
End Sub

'Sub sharedata
'	Dim share As MESShareLibrary
'	sharefname = "FOT/FOT."& DateTime.Now & ".csv"
'	File.Copy(File.DirRootExternal, "FOT/FOT.csv", File.DirRootExternal, sharefname)
'	share.sharebinary("file://" & File.DirRootExternal & "/" & sharefname, "Text/csv", "Send backup file", "")
'End Sub

'Sub deletedata
'	Dim msgans As Int
'	msgans = Msgbox2("Вы действительно хотите очистить результаты всех исследований?", "", "Да", "Нет", "", Null)
'	If msgans = -1 Then
'		File.Copy(File.DirRootExternal, "FOT/FOT.csv", File.DirRootExternal, "FOT/backup.FOT.csv")
'		
'		Dim reslist As List
'		reslist.initialize
'		Dim resfile As String
'		reslist=File.ListFiles(File.DirRootExternal & "/FOT")
'		For i = reslist.Size-1 To 0 Step - 1
'			resfile=reslist.Get(i)
'			If resfile <> "backup.FOT.csv" Then
'				File.Delete(File.DirRootExternal & "/FOT",resfile)
'			End If
'		Next
'		
'		FOTButtonShare.Enabled  = False
'		FOTButtonDelete.Enabled = False
'		FOTButtonShare.Enabled  = False
'		FOTButtonDelete.Enabled = False
'	End If
'End Sub
'
'Sub ButtonShare_Click
'	sharedata
'End Sub
'
'Sub ButtonLShare_Click
'	sharedata
'End Sub
'
'Sub ButtonDelete_Click
'	deletedata
'End Sub
'
'Sub ButtonLDelete_Click
'	deletedata
'End Sub
'










